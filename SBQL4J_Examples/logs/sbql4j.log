2014-12-23 11:11:00,705 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:00,712 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] persons where getAddress().getCity() == c
2014-12-23 11:11:00,724 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:00,724 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] persons where getAddress().getCity() == c
2014-12-23 11:11:00,734 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:00,734 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] persons where getAddress().getCity() == c
2014-12-23 11:11:00,821 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:00,821 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] persons where getAddress().getCity() == c
2014-12-23 11:11:00,834 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:00,834 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] firms where getAddress().getCity() == c
2014-12-23 11:11:00,837 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:00,837 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] firms where getAddress().getCity() == c
2014-12-23 11:11:00,840 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:00,840 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] firms where getAddress().getCity() == c
2014-12-23 11:11:00,844 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:00,844 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] firms where getAddress().getCity() == c
2014-12-23 11:11:00,911 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:00,911 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as num).(num % 2 == 1 ? "odd" : "even")
2014-12-23 11:11:00,913 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:00,913 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as num).(num % 2 == 1 ? "odd" : "even")
2014-12-23 11:11:00,914 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:00,914 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as num).(num % 2 == 1 ? "odd" : "even")
2014-12-23 11:11:00,917 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:00,917 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as num).(num % 2 == 1 ? "odd" : "even")
2014-12-23 11:11:00,919 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:00,920 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as num).(num % 2 == 1 ? "odd" : "even")
2014-12-23 11:11:00,921 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:00,921 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as num).(num % 2 == 1 ? "odd" : "even")
2014-12-23 11:11:00,922 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:00,923 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as num).(num % 2 == 1 ? "odd" : "even")
2014-12-23 11:11:00,926 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:00,927 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as num).(num % 2 == 1 ? "odd" : "even")
2014-12-23 11:11:00,928 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:00,929 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(n as n, (n % 2 == 1 ? "odd" : "even"))
2014-12-23 11:11:00,930 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:00,930 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(n as n, (n % 2 == 1 ? "odd" : "even"))
2014-12-23 11:11:00,931 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:00,931 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(n as n, (n % 2 == 1 ? "odd" : "even"))
2014-12-23 11:11:00,934 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:00,934 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(n as n, (n % 2 == 1 ? "odd" : "even"))
2014-12-23 11:11:00,968 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:00,968 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products order by (unitsInStock DESC , productName DESC  using plCollator)
2014-12-23 11:11:00,970 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:00,970 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products order by (unitsInStock DESC , productName DESC  using plCollator)
2014-12-23 11:11:00,972 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:00,972 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products order by (unitsInStock DESC , productName DESC  using plCollator)
2014-12-23 11:11:00,976 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:00,977 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products order by (unitsInStock DESC , productName DESC  using plCollator)
2014-12-23 11:11:01,014 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,015 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where (name as n where n.startsWith("I"))[0] == productName)
2014-12-23 11:11:01,024 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,025 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where (name as n where n.startsWith("I"))[0] == productName)
2014-12-23 11:11:01,054 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,055 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((name as n where n.startsWith("I"))[0] group as _aux0).db.(Product where _aux0 == productName)
2014-12-23 11:11:01,069 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,069 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((name as n where n.startsWith("I"))[0] group as _aux0).db.Product_ByIndex[productName](_aux0)
2014-12-23 11:11:01,072 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,072 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where productName == "Ikura")
2014-12-23 11:11:01,074 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,074 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where productName == "Ikura")
2014-12-23 11:11:01,076 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,076 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where productName == "Ikura")
2014-12-23 11:11:01,080 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,080 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Product_ByIndex[productName]("Ikura")
2014-12-23 11:11:01,083 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,084 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where productName == "Ikura" and unitsInStock > 0)
2014-12-23 11:11:01,085 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,086 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where productName == "Ikura" and unitsInStock > 0)
2014-12-23 11:11:01,087 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,087 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where productName == "Ikura" and unitsInStock > 0)
2014-12-23 11:11:01,092 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,092 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product_ByIndex[productName]("Ikura") where unitsInStock > 0)
2014-12-23 11:11:01,095 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,095 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where productName == "Ikura" and unitsInStock > 0 and unitPrice < 1000)
2014-12-23 11:11:01,097 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,097 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where productName == "Ikura" and unitsInStock > 0 and unitPrice < 1000)
2014-12-23 11:11:01,098 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,099 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where productName == "Ikura" and unitsInStock > 0 and unitPrice < 1000)
2014-12-23 11:11:01,102 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,103 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product_ByIndex[productName]("Ikura") where unitsInStock > 0 and unitPrice < 1000)
2014-12-23 11:11:01,141 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,142 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( all 1 true)
2014-12-23 11:11:01,145 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,146 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( all 1 true)
2014-12-23 11:11:01,153 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,154 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( all 1 true) group as _aux0).db._aux0
2014-12-23 11:11:01,159 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,159 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( all 1 true) group as _aux0).db._aux0
2014-12-23 11:11:01,162 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,162 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( all Emp isMarried())
2014-12-23 11:11:01,163 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,163 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( all Emp isMarried())
2014-12-23 11:11:01,165 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,165 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( all Emp isMarried())
2014-12-23 11:11:01,168 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,168 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( all Emp isMarried())
2014-12-23 11:11:01,169 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,170 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(true and false)
2014-12-23 11:11:01,170 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,170 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(true and false)
2014-12-23 11:11:01,171 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,171 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((true and false) group as _aux0).db._aux0
2014-12-23 11:11:01,174 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,174 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((true and false) group as _aux0).db._aux0
2014-12-23 11:11:01,180 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,180 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( any 1 true)
2014-12-23 11:11:01,184 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,184 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( any 1 true)
2014-12-23 11:11:01,191 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,191 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( any 1 true) group as _aux0).db._aux0
2014-12-23 11:11:01,197 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,197 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( any 1 true) group as _aux0).db._aux0
2014-12-23 11:11:01,199 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,199 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( any Emp isMarried())
2014-12-23 11:11:01,201 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,201 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( any Emp isMarried())
2014-12-23 11:11:01,202 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,203 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( any Emp isMarried())
2014-12-23 11:11:01,207 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,207 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( any Emp isMarried())
2014-12-23 11:11:01,209 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,210 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( bag1 union 2)
2014-12-23 11:11:01,211 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,211 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( bag1 union 2)
2014-12-23 11:11:01,212 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,212 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( bag1 union 2) group as _aux0).db._aux0
2014-12-23 11:11:01,215 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,215 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( bag1 union 2) group as _aux0).db._aux0
2014-12-23 11:11:01,217 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,217 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( bag1)
2014-12-23 11:11:01,217 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,217 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( bag1)
2014-12-23 11:11:01,218 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,218 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( bag1) group as _aux0).db._aux0
2014-12-23 11:11:01,221 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,222 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( bag1) group as _aux0).db._aux0
2014-12-23 11:11:01,225 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,226 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( bag1 + 2 union 3)
2014-12-23 11:11:01,227 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,228 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( bag1 + 2 union 3)
2014-12-23 11:11:01,230 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,230 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( bag1 + 2 union 3) group as _aux0).db._aux0
2014-12-23 11:11:01,235 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,235 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( bag1 + 2 union 3) group as _aux0).db._aux0
2014-12-23 11:11:01,238 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,238 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( bag bag1 union 2 union 3)
2014-12-23 11:11:01,240 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,240 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( bag bag1 union 2 union 3)
2014-12-23 11:11:01,243 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,243 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( bag bag1 union 2 union 3) group as _aux0).db._aux0
2014-12-23 11:11:01,247 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,247 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( bag bag1 union 2 union 3) group as _aux0).db._aux0
2014-12-23 11:11:01,248 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,248 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(1, 2)
2014-12-23 11:11:01,249 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,249 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(1, 2)
2014-12-23 11:11:01,250 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,250 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((1, 2) group as _aux0).db._aux0
2014-12-23 11:11:01,253 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,253 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((1, 2) group as _aux0).db._aux0
2014-12-23 11:11:01,254 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,254 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(( bag1 union 2), 3)
2014-12-23 11:11:01,255 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,255 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(( bag1 union 2), 3)
2014-12-23 11:11:01,256 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,256 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((( bag1 union 2), 3) group as _aux0).db._aux0
2014-12-23 11:11:01,258 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,259 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((( bag1 union 2), 3) group as _aux0).db._aux0
2014-12-23 11:11:01,260 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,260 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(( bag1 union 2), ( bag3 union 4))
2014-12-23 11:11:01,261 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,261 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(( bag1 union 2), ( bag3 union 4))
2014-12-23 11:11:01,262 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,263 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((( bag1 union 2), ( bag3 union 4)) group as _aux0).db._aux0
2014-12-23 11:11:01,265 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,265 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((( bag1 union 2), ( bag3 union 4)) group as _aux0).db._aux0
2014-12-23 11:11:01,267 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,267 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(10/ 5)
2014-12-23 11:11:01,267 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,268 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(10/ 5)
2014-12-23 11:11:01,268 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,269 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((10/ 5) group as _aux0).db._aux0
2014-12-23 11:11:01,271 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,271 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((10/ 5) group as _aux0).db._aux0
2014-12-23 11:11:01,272 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,272 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(5/ 3.5)
2014-12-23 11:11:01,273 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,273 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(5/ 3.5)
2014-12-23 11:11:01,274 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,274 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((5/ 3.5) group as _aux0).db._aux0
2014-12-23 11:11:01,276 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,276 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((5/ 3.5) group as _aux0).db._aux0
2014-12-23 11:11:01,277 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,277 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(3.5/ 5)
2014-12-23 11:11:01,278 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,278 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(3.5/ 5)
2014-12-23 11:11:01,279 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,279 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((3.5/ 5) group as _aux0).db._aux0
2014-12-23 11:11:01,281 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,281 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((3.5/ 5) group as _aux0).db._aux0
2014-12-23 11:11:01,282 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,283 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(3.5/ 5.5)
2014-12-23 11:11:01,283 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,283 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(3.5/ 5.5)
2014-12-23 11:11:01,284 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,284 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((3.5/ 5.5) group as _aux0).db._aux0
2014-12-23 11:11:01,286 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,287 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((3.5/ 5.5) group as _aux0).db._aux0
2014-12-23 11:11:01,289 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,289 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Emp.getAddress().getStreet()
2014-12-23 11:11:01,291 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,291 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Emp.getAddress().getStreet()
2014-12-23 11:11:01,292 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,293 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Emp.getAddress().getStreet()
2014-12-23 11:11:01,296 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,296 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Emp.getAddress().getStreet()
2014-12-23 11:11:01,300 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,300 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( bag1 union 2)."Ala"
2014-12-23 11:11:01,303 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,303 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( bag1 union 2)."Ala"
2014-12-23 11:11:01,309 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,309 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( bag1 union 2)."Ala" group as _aux0).db._aux0
2014-12-23 11:11:01,315 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,315 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( bag1 union 2)."Ala" group as _aux0).db._aux0
2014-12-23 11:11:01,321 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,321 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(1, 2)."Ala"
2014-12-23 11:11:01,350 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,351 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.2."Ala"
2014-12-23 11:11:01,357 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,357 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (2."Ala" group as _aux0).db._aux0
2014-12-23 11:11:01,362 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,362 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (2."Ala" group as _aux0).db._aux0
2014-12-23 11:11:01,366 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,366 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( bag1 union 2)."Ala"
2014-12-23 11:11:01,370 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,370 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( bag1 union 2)."Ala"
2014-12-23 11:11:01,373 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,373 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( bag1 union 2)."Ala"
2014-12-23 11:11:01,378 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,378 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( bag1 union 2)."Ala"
2014-12-23 11:11:01,385 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,386 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( bag( bag1 union 2), 3)."Ala"
2014-12-23 11:11:01,394 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,394 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( bag( bag1 union 2), 3)."Ala"
2014-12-23 11:11:01,403 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,403 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( bag( bag1 union 2), 3)."Ala"
2014-12-23 11:11:01,415 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,423 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( bag( bag1 union 2), 3)."Ala"
2014-12-23 11:11:01,426 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,427 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Product
2014-12-23 11:11:01,427 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,427 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Product
2014-12-23 11:11:01,428 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,428 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Product
2014-12-23 11:11:01,431 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,432 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Product
2014-12-23 11:11:01,434 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,434 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product[0]).productName
2014-12-23 11:11:01,435 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,435 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product[0]).productName
2014-12-23 11:11:01,436 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,436 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product[0]).productName
2014-12-23 11:11:01,439 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,439 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product[0]).productName
2014-12-23 11:11:01,443 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,444 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbers as n where n < 5)
2014-12-23 11:11:01,444 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,444 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbers as n where n < 5)
2014-12-23 11:11:01,445 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,445 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbers as n where n < 5) group as _aux0).db._aux0
2014-12-23 11:11:01,448 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,449 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbers as n where n < 5) group as _aux0).db._aux0
2014-12-23 11:11:01,450 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,451 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where unitsInStock == 0)
2014-12-23 11:11:01,452 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,452 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where unitsInStock == 0)
2014-12-23 11:11:01,453 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,454 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where unitsInStock == 0)
2014-12-23 11:11:01,456 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,457 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where unitsInStock == 0)
2014-12-23 11:11:01,499 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,499 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where unitsInStock > minUnitsInStock and unitPrice > minUnitPrice)
2014-12-23 11:11:01,503 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,503 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where unitsInStock > minUnitsInStock and unitPrice > minUnitPrice)
2014-12-23 11:11:01,505 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,506 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where unitsInStock > minUnitsInStock and unitPrice > minUnitPrice)
2014-12-23 11:11:01,510 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,511 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product where unitsInStock > minUnitsInStock and unitPrice > minUnitPrice)
2014-12-23 11:11:01,538 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,539 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer where region == "WA")
2014-12-23 11:11:01,540 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,540 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer where region == "WA")
2014-12-23 11:11:01,542 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,542 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer where region == "WA")
2014-12-23 11:11:01,546 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,546 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer where region == "WA")
2014-12-23 11:11:01,550 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,550 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(digits where length() < $index)
2014-12-23 11:11:01,553 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,553 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(digits where length() < $index)
2014-12-23 11:11:01,557 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,558 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((digits where length() < $index) group as _aux0).db._aux0
2014-12-23 11:11:01,562 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,562 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((digits where length() < $index) group as _aux0).db._aux0
2014-12-23 11:11:01,563 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,563 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbers as n).(n + 1)
2014-12-23 11:11:01,563 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,564 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbers as n).(n + 1)
2014-12-23 11:11:01,564 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,564 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbers as n).(n + 1) group as _aux0).db._aux0
2014-12-23 11:11:01,566 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,567 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbers as n).(n + 1) group as _aux0).db._aux0
2014-12-23 11:11:01,568 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,568 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Product.productName
2014-12-23 11:11:01,569 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,570 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Product.productName
2014-12-23 11:11:01,570 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,570 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Product.productName
2014-12-23 11:11:01,573 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,573 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Product.productName
2014-12-23 11:11:01,574 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,574 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbers as n).(strings[n])
2014-12-23 11:11:01,575 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,575 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbers as n).(strings[n])
2014-12-23 11:11:01,576 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,576 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbers as n).(strings[n]) group as _aux0).db._aux0
2014-12-23 11:11:01,578 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,578 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbers as n).(strings[n]) group as _aux0).db._aux0
2014-12-23 11:11:01,581 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,581 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.words.(toUpperCase() as upper, toLowerCase() as lower)
2014-12-23 11:11:01,584 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,584 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.words.(toUpperCase() as upper, toLowerCase() as lower)
2014-12-23 11:11:01,588 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,588 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (words.(toUpperCase() as upper, toLowerCase() as lower) group as _aux0).db._aux0
2014-12-23 11:11:01,592 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,593 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (words.(toUpperCase() as upper, toLowerCase() as lower) group as _aux0).db._aux0
2014-12-23 11:11:01,594 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,594 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(strings[n] as digit, (n % 2 == 0) as even)
2014-12-23 11:11:01,595 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,595 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(strings[n] as digit, (n % 2 == 0) as even)
2014-12-23 11:11:01,595 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,596 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(strings[n] as digit, (n % 2 == 0) as even)
2014-12-23 11:11:01,598 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,598 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(strings[n] as digit, (n % 2 == 0) as even)
2014-12-23 11:11:01,599 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,599 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Product.(productName as productName, category as category, unitPrice as price)
2014-12-23 11:11:01,600 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,600 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Product.(productName as productName, category as category, unitPrice as price)
2014-12-23 11:11:01,601 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,601 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Product.(productName as productName, category as category, unitPrice as price)
2014-12-23 11:11:01,604 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,604 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Product.(productName as productName, category as category, unitPrice as price)
2014-12-23 11:11:01,605 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,605 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbers as num).(num as num, (num == $index) as inPlace)
2014-12-23 11:11:01,605 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,606 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbers as num).(num as num, (num == $index) as inPlace)
2014-12-23 11:11:01,606 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,607 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbers as num).(num as num, (num == $index) as inPlace) group as _aux0).db._aux0
2014-12-23 11:11:01,609 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,609 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbers as num).(num as num, (num == $index) as inPlace) group as _aux0).db._aux0
2014-12-23 11:11:01,610 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,611 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n where n < 5).(digits[n])
2014-12-23 11:11:01,611 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,611 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n where n < 5).(digits[n])
2014-12-23 11:11:01,612 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,612 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n where n < 5).(digits[n])
2014-12-23 11:11:01,614 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,614 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n where n < 5).(digits[n])
2014-12-23 11:11:01,615 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,615 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbersA as a, numbersB as b where a < b)
2014-12-23 11:11:01,616 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,616 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbersA as a, numbersB as b where a < b)
2014-12-23 11:11:01,617 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,617 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbersA as a, numbersB as b where a < b) group as _aux0).db._aux0
2014-12-23 11:11:01,619 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,619 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbersA as a, numbersB as b where a < b) group as _aux0).db._aux0
2014-12-23 11:11:01,622 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,623 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer where  exists (orders where total < 500.0) join orders where total < 500.0).(customerID as customerId, orderID as orderID, total as total)
2014-12-23 11:11:01,624 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,625 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer where  exists (orders where total < 500.0) join orders where total < 500.0).(customerID as customerId, orderID as orderID, total as total)
2014-12-23 11:11:01,626 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,627 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer where  exists (orders where total < 500.0) join orders where total < 500.0).(customerID as customerId, orderID as orderID, total as total)
2014-12-23 11:11:01,630 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,631 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer where  exists (orders where total < 500.0) join orders where total < 500.0).(customerID as customerId, orderID as orderID, total as total)
2014-12-23 11:11:01,639 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,639 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer where  exists (orders where orderDate > d) join orders where orderDate > d).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:01,643 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,644 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer where  exists (orders where orderDate > d) join orders where orderDate > d).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:01,648 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,648 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer where  exists (orders where orderDate > d) join orders where orderDate > d).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:01,655 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,656 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer where  exists (orders where orderDate > d) join orders where orderDate > d).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:01,660 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,661 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c join (c.orders as o where o.total > 2000) as j where  exists j).(c.customerID as customerID, j.o.orderID as orderID, j.o.total as total)
2014-12-23 11:11:01,664 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,665 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c join (c.orders as o where o.total > 2000) as j where  exists j).(c.customerID as customerID, j.o.orderID as orderID, j.o.total as total)
2014-12-23 11:11:01,668 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,668 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c join (c.orders as o where o.total > 2000) as j where  exists j).(c.customerID as customerID, j.o.orderID as orderID, j.o.total as total)
2014-12-23 11:11:01,674 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,674 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c join (c.orders as o where o.total > 2000) as j where  exists j).(c.customerID as customerID, j.o.orderID as orderID, j.o.total as total)
2014-12-23 11:11:01,685 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,686 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c where c.region == "WA" join c.orders as o where o.orderDate >= cutoffDate).(c.customerID as customerID, o.orderID as orderID)
2014-12-23 11:11:01,695 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,695 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c where c.region == "WA" join c.orders as o where o.orderDate >= cutoffDate).(c.customerID as customerID, o.orderID as orderID)
2014-12-23 11:11:01,699 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,699 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c where c.region == "WA" join c.orders as o where o.orderDate >= cutoffDate).(c.customerID as customerID, o.orderID as orderID)
2014-12-23 11:11:01,705 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,706 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c where c.region == "WA" join c.orders as o where o.orderDate >= cutoffDate).(c.customerID as customerID, o.orderID as orderID)
2014-12-23 11:11:01,711 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,711 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Customer where  exists orders) as c).($index as custIndex, c.orders as o).("Customer #" + custIndex + 1 + " has an order with OrderID " + o.orderID)
2014-12-23 11:11:01,715 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,715 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Customer where  exists orders) as c).($index as custIndex, c.orders as o).("Customer #" + custIndex + 1 + " has an order with OrderID " + o.orderID)
2014-12-23 11:11:01,718 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,719 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Customer where  exists orders) as c).($index as custIndex, c.orders as o).("Customer #" + custIndex + 1 + " has an order with OrderID " + o.orderID)
2014-12-23 11:11:01,724 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,725 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Customer where  exists orders) as c).($index as custIndex, c.orders as o).("Customer #" + custIndex + 1 + " has an order with OrderID " + o.orderID)
2014-12-23 11:11:01,727 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,727 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbers[0..2])
2014-12-23 11:11:01,728 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,728 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbers[0..2])
2014-12-23 11:11:01,729 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,730 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers[0..2] group as _aux0).db._aux0
2014-12-23 11:11:01,733 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,733 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers[0..2] group as _aux0).db._aux0
2014-12-23 11:11:01,738 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,738 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Customer where region == "WA" join orders)[0..2]).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:01,742 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,742 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Customer where region == "WA" join orders)[0..2]).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:01,745 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,746 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Customer where region == "WA" join orders)[0..2]).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:01,751 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,751 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Customer where region == "WA" join orders)[0..2]).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:01,752 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,753 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbers[4..*])
2014-12-23 11:11:01,753 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,753 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbers[4..*])
2014-12-23 11:11:01,754 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,754 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers[4..*] group as _aux0).db._aux0
2014-12-23 11:11:01,756 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,757 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers[4..*] group as _aux0).db._aux0
2014-12-23 11:11:01,761 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,761 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Customer as c where c.region == "WA" and  exists c.orders join c.orders as o)[2..*]).(c.customerID as customerID, o.orderID as orderID, o.orderDate as orderDate)
2014-12-23 11:11:01,764 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,764 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Customer as c where c.region == "WA" and  exists c.orders join c.orders as o)[2..*]).(c.customerID as customerID, o.orderID as orderID, o.orderDate as orderDate)
2014-12-23 11:11:01,766 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,767 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Customer as c where c.region == "WA" and  exists c.orders join c.orders as o)[2..*]).(c.customerID as customerID, o.orderID as orderID, o.orderDate as orderDate)
2014-12-23 11:11:01,774 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,774 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Customer as c where c.region == "WA" and  exists c.orders join c.orders as o)[2..*]).(c.customerID as customerID, o.orderID as orderID, o.orderDate as orderDate)
2014-12-23 11:11:01,776 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,777 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w))
2014-12-23 11:11:01,777 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,777 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w))
2014-12-23 11:11:01,778 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,778 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w))
2014-12-23 11:11:01,781 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,782 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w))
2014-12-23 11:11:01,788 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,788 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w.length()))
2014-12-23 11:11:01,794 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,795 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w.length()))
2014-12-23 11:11:01,799 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,799 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w.length()))
2014-12-23 11:11:01,807 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,807 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w.length()))
2014-12-23 11:11:01,810 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,810 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product as p order by (p.productName))
2014-12-23 11:11:01,812 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,812 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product as p order by (p.productName))
2014-12-23 11:11:01,813 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,814 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product as p order by (p.productName))
2014-12-23 11:11:01,817 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,818 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product as p order by (p.productName))
2014-12-23 11:11:01,821 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,822 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w using comp))
2014-12-23 11:11:01,823 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,823 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w using comp))
2014-12-23 11:11:01,824 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,824 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w using comp))
2014-12-23 11:11:01,827 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,828 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w using comp))
2014-12-23 11:11:01,829 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,830 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(doubles as d order by (d DESC ))
2014-12-23 11:11:01,830 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,831 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(doubles as d order by (d DESC ))
2014-12-23 11:11:01,831 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,832 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(doubles as d order by (d DESC ))
2014-12-23 11:11:01,835 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,835 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(doubles as d order by (d DESC ))
2014-12-23 11:11:01,837 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,837 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product order by (unitsInStock DESC ))
2014-12-23 11:11:01,839 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,839 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product order by (unitsInStock DESC ))
2014-12-23 11:11:01,840 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,841 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product order by (unitsInStock DESC ))
2014-12-23 11:11:01,844 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,845 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product order by (unitsInStock DESC ))
2014-12-23 11:11:01,851 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,851 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words order by (toLowerCase() DESC ))
2014-12-23 11:11:01,856 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,857 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words order by (toLowerCase() DESC ))
2014-12-23 11:11:01,862 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,862 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words order by (toLowerCase() DESC ))
2014-12-23 11:11:01,870 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,870 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words order by (toLowerCase() DESC ))
2014-12-23 11:11:01,887 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,887 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(digits as d order by (d.length(), d))
2014-12-23 11:11:01,892 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,893 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(digits as d order by (d.length(), d))
2014-12-23 11:11:01,897 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,897 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(digits as d order by (d.length(), d))
2014-12-23 11:11:01,925 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,925 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(digits as d order by (d.length(), d))
2014-12-23 11:11:01,932 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,932 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w.length(), w using comp))
2014-12-23 11:11:01,936 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,937 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w.length(), w using comp))
2014-12-23 11:11:01,941 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,941 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w.length(), w using comp))
2014-12-23 11:11:01,948 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,949 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w.length(), w using comp))
2014-12-23 11:11:01,951 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,951 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product order by (category, unitPrice DESC ))
2014-12-23 11:11:01,953 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,953 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product order by (category, unitPrice DESC ))
2014-12-23 11:11:01,954 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,955 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product order by (category, unitPrice DESC ))
2014-12-23 11:11:01,959 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,959 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Product order by (category, unitPrice DESC ))
2014-12-23 11:11:01,966 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,967 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w.length(), w using comp))
2014-12-23 11:11:01,972 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,973 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w.length(), w using comp))
2014-12-23 11:11:01,977 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:01,978 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w.length(), w using comp))
2014-12-23 11:11:01,984 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:01,984 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(words as w order by (w.length(), w using comp))
2014-12-23 11:11:01,987 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:01,987 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique (numbers as n).(n % 5) as r).(r as remainder, (numbers as n where n % 5 == r) group as numbers)
2014-12-23 11:11:01,988 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:01,989 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique (numbers as n).(n % 5) as r).(r as remainder, (numbers as n where n % 5 == r) group as numbers)
2014-12-23 11:11:02,002 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,003 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbers as n group as _aux1).( unique (numbers as n).(n % 5) as r).(r as remainder, (_aux1 where n % 5 == r) group as numbers) group as _aux0).db._aux0
2014-12-23 11:11:02,007 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,007 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbers as n group as _aux1).( unique (numbers as n).(n % 5) as r).(r as remainder, (_aux1 where n % 5 == r) group as numbers) group as _aux0).db._aux0
2014-12-23 11:11:02,018 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,019 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique words.charAt(0) as f).(f as firstLetter, (words as w where w.charAt(0) == f) group as words)
2014-12-23 11:11:02,028 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,029 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique words.charAt(0) as f).(f as firstLetter, (words as w where w.charAt(0) == f) group as words)
2014-12-23 11:11:02,056 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,056 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((words as w group as _aux1).( unique words.charAt(0) as f).(f as firstLetter, (_aux1 where w.charAt(0) == f) group as words) group as _aux0).db._aux0
2014-12-23 11:11:02,068 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,068 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((words as w group as _aux1).( unique words.charAt(0) as f).(f as firstLetter, (_aux1 where w.charAt(0) == f) group as words) group as _aux0).db._aux0
2014-12-23 11:11:02,072 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,072 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as c).(c as category, (Product where category == c) group as products)
2014-12-23 11:11:02,075 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,075 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as c).(c as category, (Product where category == c) group as products)
2014-12-23 11:11:02,077 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,078 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as c).(c as category, (Product where category == c) group as products)
2014-12-23 11:11:02,083 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,083 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as c).(c as category, (Product where category == c) group as products)
2014-12-23 11:11:02,095 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,096 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c).(c.companyName as companyName join ( unique c.orders.orderDate.getYear() as year join (c.orders where orderDate.getYear() == year) group as yearGroups).(year as year, ( unique yearGroups.orderDate.getMonth() as month join (yearGroups where orderDate.getMonth() == month) group as orders) group as monthGroups) group as yearGroups)
2014-12-23 11:11:02,107 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,107 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c).(c.companyName as companyName join ( unique c.orders.orderDate.getYear() as year join (c.orders where orderDate.getYear() == year) group as yearGroups).(year as year, ( unique yearGroups.orderDate.getMonth() as month join (yearGroups where orderDate.getMonth() == month) group as orders) group as monthGroups) group as yearGroups)
2014-12-23 11:11:02,137 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,138 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c).(( unique c.orders.orderDate.getYear() as year join (c.orders where orderDate.getYear() == year) group as yearGroups).(year as year, ( unique yearGroups.orderDate.getMonth() as month join (yearGroups where orderDate.getMonth() == month) group as orders) group as monthGroups) group as yearGroups group as _aux0).(c.companyName as companyName join _aux0)
2014-12-23 11:11:02,151 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,151 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c).(( unique c.orders.orderDate.getYear() as year join (c.orders where orderDate.getYear() == year) group as yearGroups).(year as year, ( unique yearGroups.orderDate.getMonth() as month join (yearGroups where orderDate.getMonth() == month) group as orders) group as monthGroups) group as yearGroups group as _aux0).(c.companyName as companyName join _aux0)
2014-12-23 11:11:02,153 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,153 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique factorsOf300)
2014-12-23 11:11:02,154 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,154 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique factorsOf300)
2014-12-23 11:11:02,155 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,155 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique factorsOf300 group as _aux0).db._aux0
2014-12-23 11:11:02,158 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,159 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique factorsOf300 group as _aux0).db._aux0
2014-12-23 11:11:02,161 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,161 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category)
2014-12-23 11:11:02,162 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,163 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category)
2014-12-23 11:11:02,164 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,164 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category)
2014-12-23 11:11:02,168 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,168 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category)
2014-12-23 11:11:02,169 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,170 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique (numbersA union numbersB))
2014-12-23 11:11:02,170 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,171 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique (numbersA union numbersB))
2014-12-23 11:11:02,172 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,172 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique (numbersA union numbersB) group as _aux0).db._aux0
2014-12-23 11:11:02,175 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,176 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique (numbersA union numbersB) group as _aux0).db._aux0
2014-12-23 11:11:02,183 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,184 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique (Product.productName.charAt(0) union Customer.companyName.charAt(0)))
2014-12-23 11:11:02,192 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,192 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique (Product.productName.charAt(0) union Customer.companyName.charAt(0)))
2014-12-23 11:11:02,200 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,201 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique (Product.productName.charAt(0) union Customer.companyName.charAt(0)))
2014-12-23 11:11:02,212 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,212 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique (Product.productName.charAt(0) union Customer.companyName.charAt(0)))
2014-12-23 11:11:02,214 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,214 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbersA intersect numbersB)
2014-12-23 11:11:02,215 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,215 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbersA intersect numbersB)
2014-12-23 11:11:02,216 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,216 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbersA intersect numbersB group as _aux0).db._aux0
2014-12-23 11:11:02,219 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,220 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbersA intersect numbersB group as _aux0).db._aux0
2014-12-23 11:11:02,231 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,231 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.productName.charAt(0) intersect Customer.companyName.charAt(0))
2014-12-23 11:11:02,242 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,242 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.productName.charAt(0) intersect Customer.companyName.charAt(0))
2014-12-23 11:11:02,250 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,250 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.productName.charAt(0) intersect Customer.companyName.charAt(0))
2014-12-23 11:11:02,274 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,275 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.productName.charAt(0) intersect Customer.companyName.charAt(0))
2014-12-23 11:11:02,276 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,277 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbersA minus numbersB)
2014-12-23 11:11:02,278 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,280 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbersA minus numbersB)
2014-12-23 11:11:02,281 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,281 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbersA minus numbersB group as _aux0).db._aux0
2014-12-23 11:11:02,290 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,290 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbersA minus numbersB group as _aux0).db._aux0
2014-12-23 11:11:02,302 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,302 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.productName.charAt(0) minus  unique Customer.companyName.charAt(0))
2014-12-23 11:11:02,312 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,312 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.productName.charAt(0) minus  unique Customer.companyName.charAt(0))
2014-12-23 11:11:02,322 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,323 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.productName.charAt(0) minus  unique Customer.companyName.charAt(0))
2014-12-23 11:11:02,335 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,335 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.productName.charAt(0) minus  unique Customer.companyName.charAt(0))
2014-12-23 11:11:02,338 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,338 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers as n where n instanceof Double
2014-12-23 11:11:02,339 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,339 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers as n where n instanceof Double
2014-12-23 11:11:02,340 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,340 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers as n where n instanceof Double
2014-12-23 11:11:02,343 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,343 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers as n where n instanceof Double
2014-12-23 11:11:02,346 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,346 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Product where productID == 12)[0])
2014-12-23 11:11:02,348 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,348 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Product where productID == 12)[0])
2014-12-23 11:11:02,352 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,353 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Product where productID == 12)[0])
2014-12-23 11:11:02,357 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,357 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Product where productID == 12)[0])
2014-12-23 11:11:02,363 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,364 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((strings as s where s.charAt(0) == 'o')[0])
2014-12-23 11:11:02,369 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,369 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((strings as s where s.charAt(0) == 'o')[0])
2014-12-23 11:11:02,374 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,375 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((strings as s where s.charAt(0) == 'o')[0] group as _aux0).db._aux0
2014-12-23 11:11:02,381 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,382 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((strings as s where s.charAt(0) == 'o')[0] group as _aux0).db._aux0
2014-12-23 11:11:02,383 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,384 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((numbers as n where n > 5)[1])
2014-12-23 11:11:02,384 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,385 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((numbers as n where n > 5)[1])
2014-12-23 11:11:02,386 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,386 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbers as n where n > 5)[1] group as _aux0).db._aux0
2014-12-23 11:11:02,389 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,389 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbers as n where n > 5)[1] group as _aux0).db._aux0
2014-12-23 11:11:02,393 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,393 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( any words contains("ei"))
2014-12-23 11:11:02,396 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,396 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( any words contains("ei"))
2014-12-23 11:11:02,401 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,401 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( any words contains("ei")) group as _aux0).db._aux0
2014-12-23 11:11:02,405 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,407 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( any words contains("ei")) group as _aux0).db._aux0
2014-12-23 11:11:02,409 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,409 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(( unique Product.category as cat).(cat as category, (Product where category == cat) group as products) where  any products unitsInStock == 0)
2014-12-23 11:11:02,411 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,412 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(( unique Product.category as cat).(cat as category, (Product where category == cat) group as products) where  any products unitsInStock == 0)
2014-12-23 11:11:02,413 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,414 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(( unique Product.category as cat).(cat as category, (Product where category == cat) group as products) where  any products unitsInStock == 0)
2014-12-23 11:11:02,417 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,418 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(( unique Product.category as cat).(cat as category, (Product where category == cat) group as products) where  any products unitsInStock == 0)
2014-12-23 11:11:02,419 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,419 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( all numbers as n n % 2 == 1)
2014-12-23 11:11:02,420 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,420 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( all numbers as n n % 2 == 1)
2014-12-23 11:11:02,421 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,421 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( all numbers as n n % 2 == 1) group as _aux0).db._aux0
2014-12-23 11:11:02,424 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,424 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( all numbers as n n % 2 == 1) group as _aux0).db._aux0
2014-12-23 11:11:02,427 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,427 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(( unique Product.category as cat).(cat as category, (Product where category == cat) group as products) where  all products unitsInStock > 0)
2014-12-23 11:11:02,430 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,430 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(( unique Product.category as cat).(cat as category, (Product where category == cat) group as products) where  all products unitsInStock > 0)
2014-12-23 11:11:02,432 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,432 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(( unique Product.category as cat).(cat as category, (Product where category == cat) group as products) where  all products unitsInStock > 0)
2014-12-23 11:11:02,435 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,436 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(( unique Product.category as cat).(cat as category, (Product where category == cat) group as products) where  all products unitsInStock > 0)
2014-12-23 11:11:02,437 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,437 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( count( unique factorsOf300))
2014-12-23 11:11:02,438 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,438 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( count( unique factorsOf300))
2014-12-23 11:11:02,439 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,439 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( count( unique factorsOf300) group as _aux0).db._aux0
2014-12-23 11:11:02,441 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,442 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( count( unique factorsOf300) group as _aux0).db._aux0
2014-12-23 11:11:02,443 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,443 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( count((numbers as n where n % 2 == 1)))
2014-12-23 11:11:02,444 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,444 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( count((numbers as n where n % 2 == 1)))
2014-12-23 11:11:02,445 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,445 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( count((numbers as n where n % 2 == 1)) group as _aux0).db._aux0
2014-12-23 11:11:02,447 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,447 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( count((numbers as n where n % 2 == 1)) group as _aux0).db._aux0
2014-12-23 11:11:02,450 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,450 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c).(c.customerID as customerID,  count(c.orders) as orderCount)
2014-12-23 11:11:02,452 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,453 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c).(c.customerID as customerID,  count(c.orders) as orderCount)
2014-12-23 11:11:02,454 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,455 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c).(c.customerID as customerID,  count(c.orders) as orderCount)
2014-12-23 11:11:02,459 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,460 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer as c).(c.customerID as customerID,  count(c.orders) as orderCount)
2014-12-23 11:11:02,463 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,464 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  count((Product where category == cat)) as productCount)
2014-12-23 11:11:02,466 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,466 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  count((Product where category == cat)) as productCount)
2014-12-23 11:11:02,468 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,469 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  count((Product where category == cat)) as productCount)
2014-12-23 11:11:02,473 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,474 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  count((Product where category == cat)) as productCount)
2014-12-23 11:11:02,476 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,476 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( sum numbers)
2014-12-23 11:11:02,477 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,477 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( sum numbers)
2014-12-23 11:11:02,478 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,478 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( sum numbers group as _aux0).db._aux0
2014-12-23 11:11:02,482 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,482 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( sum numbers group as _aux0).db._aux0
2014-12-23 11:11:02,487 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,487 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( sum words.length())
2014-12-23 11:11:02,492 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,492 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( sum words.length())
2014-12-23 11:11:02,499 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,500 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( sum words.length() group as _aux0).db._aux0
2014-12-23 11:11:02,506 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,506 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( sum words.length() group as _aux0).db._aux0
2014-12-23 11:11:02,509 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,510 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  sum (Product where category == cat).unitsInStock as totalUnitsInStock)
2014-12-23 11:11:02,512 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,513 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  sum (Product where category == cat).unitsInStock as totalUnitsInStock)
2014-12-23 11:11:02,514 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,515 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  sum (Product where category == cat).unitsInStock as totalUnitsInStock)
2014-12-23 11:11:02,519 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,520 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  sum (Product where category == cat).unitsInStock as totalUnitsInStock)
2014-12-23 11:11:02,521 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,522 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( min(numbers))
2014-12-23 11:11:02,522 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,522 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( min(numbers))
2014-12-23 11:11:02,523 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,523 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( min(numbers) group as _aux0).db._aux0
2014-12-23 11:11:02,527 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,527 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( min(numbers) group as _aux0).db._aux0
2014-12-23 11:11:02,532 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,533 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( min(words.length()))
2014-12-23 11:11:02,535 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,536 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( min(words.length()))
2014-12-23 11:11:02,541 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,541 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( min(words.length()) group as _aux0).db._aux0
2014-12-23 11:11:02,546 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,547 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( min(words.length()) group as _aux0).db._aux0
2014-12-23 11:11:02,550 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,550 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  min((Product where category == cat).unitPrice) as cheapestPrice)
2014-12-23 11:11:02,552 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,552 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  min((Product where category == cat).unitPrice) as cheapestPrice)
2014-12-23 11:11:02,554 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,554 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  min((Product where category == cat).unitPrice) as cheapestPrice)
2014-12-23 11:11:02,559 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,559 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  min((Product where category == cat).unitPrice) as cheapestPrice)
2014-12-23 11:11:02,563 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,563 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as cat, (Product where category == cat) group as pr).(cat as category, (pr where unitPrice ==  min(pr.unitPrice)) group as cheapestProducts)
2014-12-23 11:11:02,565 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,566 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as cat, (Product where category == cat) group as pr).(cat as category, (pr where unitPrice ==  min(pr.unitPrice)) group as cheapestProducts)
2014-12-23 11:11:02,571 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,571 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as cat, (Product where category == cat) group as pr).(cat as category, ( min(pr.unitPrice) group as _aux0).(pr where unitPrice == _aux0) group as cheapestProducts)
2014-12-23 11:11:02,576 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,576 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as cat, (Product where category == cat) group as pr).(cat as category, ( min(pr.unitPrice) group as _aux0).(pr where unitPrice == _aux0) group as cheapestProducts)
2014-12-23 11:11:02,578 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,578 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( max(numbers))
2014-12-23 11:11:02,579 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,579 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( max(numbers))
2014-12-23 11:11:02,580 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,580 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( max(numbers) group as _aux0).db._aux0
2014-12-23 11:11:02,583 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,584 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( max(numbers) group as _aux0).db._aux0
2014-12-23 11:11:02,588 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,588 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( max(words.length()))
2014-12-23 11:11:02,591 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,592 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( max(words.length()))
2014-12-23 11:11:02,597 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,598 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( max(words.length()) group as _aux0).db._aux0
2014-12-23 11:11:02,603 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,604 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( max(words.length()) group as _aux0).db._aux0
2014-12-23 11:11:02,607 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,608 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  max((Product where category == cat).unitPrice) as mostExpensivePrice)
2014-12-23 11:11:02,610 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,611 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  max((Product where category == cat).unitPrice) as mostExpensivePrice)
2014-12-23 11:11:02,612 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,613 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  max((Product where category == cat).unitPrice) as mostExpensivePrice)
2014-12-23 11:11:02,618 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,618 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  max((Product where category == cat).unitPrice) as mostExpensivePrice)
2014-12-23 11:11:02,622 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,622 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as cat, (Product where category == cat) group as pr).(cat as category, (pr where unitPrice ==  max(pr.unitPrice)) group as mostExpensiveProducts)
2014-12-23 11:11:02,624 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,624 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as cat, (Product where category == cat) group as pr).(cat as category, (pr where unitPrice ==  max(pr.unitPrice)) group as mostExpensiveProducts)
2014-12-23 11:11:02,627 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,627 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as cat, (Product where category == cat) group as pr).(cat as category, ( max(pr.unitPrice) group as _aux0).(pr where unitPrice == _aux0) group as mostExpensiveProducts)
2014-12-23 11:11:02,632 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,632 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as cat, (Product where category == cat) group as pr).(cat as category, ( max(pr.unitPrice) group as _aux0).(pr where unitPrice == _aux0) group as mostExpensiveProducts)
2014-12-23 11:11:02,635 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,635 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( avg(numbers))
2014-12-23 11:11:02,636 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,636 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( avg(numbers))
2014-12-23 11:11:02,637 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,637 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( avg(numbers) group as _aux0).db._aux0
2014-12-23 11:11:02,640 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,640 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( avg(numbers) group as _aux0).db._aux0
2014-12-23 11:11:02,643 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,644 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( avg(words.length()))
2014-12-23 11:11:02,645 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,646 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( avg(words.length()))
2014-12-23 11:11:02,650 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,651 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( avg(words.length()) group as _aux0).db._aux0
2014-12-23 11:11:02,656 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,656 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( avg(words.length()) group as _aux0).db._aux0
2014-12-23 11:11:02,658 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,658 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  avg((Product where category == cat).unitPrice) as averagePrice)
2014-12-23 11:11:02,660 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,660 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  avg((Product where category == cat).unitPrice) as averagePrice)
2014-12-23 11:11:02,661 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,662 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  avg((Product where category == cat).unitPrice) as averagePrice)
2014-12-23 11:11:02,664 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,665 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Product.category as cat).(cat as category,  avg((Product where category == cat).unitPrice) as averagePrice)
2014-12-23 11:11:02,666 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,666 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbersA union numbersB)
2014-12-23 11:11:02,666 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,666 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(numbersA union numbersB)
2014-12-23 11:11:02,667 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,667 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbersA union numbersB) group as _aux0).db._aux0
2014-12-23 11:11:02,669 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,669 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((numbersA union numbersB) group as _aux0).db._aux0
2014-12-23 11:11:02,670 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,670 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer.companyName union Product.productName)
2014-12-23 11:11:02,671 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,671 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer.companyName union Product.productName)
2014-12-23 11:11:02,672 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,672 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer.companyName union Product.productName)
2014-12-23 11:11:02,675 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,675 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Customer.companyName union Product.productName)
2014-12-23 11:11:02,676 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,676 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( all wordsA as a a == wordsB[$index])
2014-12-23 11:11:02,676 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,677 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( all wordsA as a a == wordsB[$index])
2014-12-23 11:11:02,677 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,677 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( all wordsA as a a == wordsB[$index]) group as _aux0).db._aux0
2014-12-23 11:11:02,679 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,680 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( all wordsA as a a == wordsB[$index]) group as _aux0).db._aux0
2014-12-23 11:11:02,701 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,701 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db1.(Employee where getSalary() >  avg(depts.getBudget())/ 10) union db2.(Employee where getSalary() > minSalary)
2014-12-23 11:11:02,703 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,703 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db1.(Employee where getSalary() >  avg(depts.getBudget())/ 10) union db2.(Employee where getSalary() > minSalary)
2014-12-23 11:11:02,709 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,709 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( avg(depts.getBudget())/ 10) group as _aux0).db1.(Employee where getSalary() > _aux0) union db2.(Employee where getSalary() > minSalary)
2014-12-23 11:11:02,715 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,716 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (( avg(depts.getBudget())/ 10) group as _aux0).db1.(Employee where getSalary() > _aux0) union db2.(Employee where getSalary() > minSalary)
2014-12-23 11:11:02,718 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,718 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db1.(Employee where getSalary() > minSalary) union db2.(Employee where getJob() == reqJob)
2014-12-23 11:11:02,720 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,720 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db1.(Employee where getSalary() > minSalary) union db2.(Employee where getJob() == reqJob)
2014-12-23 11:11:02,721 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,721 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db1.(Employee where getSalary() > minSalary) union db2.(Employee where getJob() == reqJob)
2014-12-23 11:11:02,725 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,726 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db1.(Employee where getSalary() > minSalary) union db2.(Employee where getJob() == reqJob)
2014-12-23 11:11:02,730 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,731 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Department join  avg(getEmploys().getSalary()))
2014-12-23 11:11:02,732 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,732 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Department join  avg(getEmploys().getSalary()))
2014-12-23 11:11:02,733 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,734 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Department join  avg(getEmploys().getSalary()))
2014-12-23 11:11:02,737 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,737 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Department join  avg(getEmploys().getSalary()))
2014-12-23 11:11:02,739 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,739 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Employee where getSalary() < 2222).(getName(), getSalary(), getWorksIn().getName())
2014-12-23 11:11:02,741 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,741 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Employee where getSalary() < 2222).(getName(), getSalary(), getWorksIn().getName())
2014-12-23 11:11:02,742 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,743 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Employee where getSalary() < 2222).(getName(), getSalary(), getWorksIn().getName())
2014-12-23 11:11:02,747 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,748 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Employee where getSalary() < 2222).(getName(), getSalary(), getWorksIn().getName())
2014-12-23 11:11:02,752 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,752 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Employee where getWorksIn().getBoss().getName() == "Bert").getName()
2014-12-23 11:11:02,754 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,755 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Employee where getWorksIn().getBoss().getName() == "Bert").getName()
2014-12-23 11:11:02,756 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,756 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Employee where getWorksIn().getBoss().getName() == "Bert").getName()
2014-12-23 11:11:02,759 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,759 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Employee where getWorksIn().getBoss().getName() == "Bert").getName()
2014-12-23 11:11:02,762 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,762 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Employee where getName() == "Poe")[0]).getWorksIn().getBoss().getName()
2014-12-23 11:11:02,763 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,763 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Employee where getName() == "Poe")[0]).getWorksIn().getBoss().getName()
2014-12-23 11:11:02,765 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,765 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Employee where getName() == "Poe")[0]).getWorksIn().getBoss().getName()
2014-12-23 11:11:02,768 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,768 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Employee where getName() == "Poe")[0]).getWorksIn().getBoss().getName()
2014-12-23 11:11:02,771 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,771 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Department where getBoss().getName() == "Bert").getEmploys().(getName(), ( exists getAddress() ? getAddress().getCity() : "No address"))
2014-12-23 11:11:02,773 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,773 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Department where getBoss().getName() == "Bert").getEmploys().(getName(), ( exists getAddress() ? getAddress().getCity() : "No address"))
2014-12-23 11:11:02,774 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,775 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Department where getBoss().getName() == "Bert").getEmploys().(getName(), ( exists getAddress() ? getAddress().getCity() : "No address"))
2014-12-23 11:11:02,778 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,778 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Department where getBoss().getName() == "Bert").getEmploys().(getName(), ( exists getAddress() ? getAddress().getCity() : "No address"))
2014-12-23 11:11:02,781 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,781 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( min(Department.( count(getEmploys()))) as minimum,  avg(Department.( count(getEmploys()))) as average,  max(Department.( count(getEmploys()))) as maximum)
2014-12-23 11:11:02,783 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,783 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( min(Department.( count(getEmploys()))) as minimum,  avg(Department.( count(getEmploys()))) as average,  max(Department.( count(getEmploys()))) as maximum)
2014-12-23 11:11:02,784 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,784 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( min(Department.( count(getEmploys()))) as minimum,  avg(Department.( count(getEmploys()))) as average,  max(Department.( count(getEmploys()))) as maximum)
2014-12-23 11:11:02,787 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,788 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( min(Department.( count(getEmploys()))) as minimum,  avg(Department.( count(getEmploys()))) as average,  max(Department.( count(getEmploys()))) as maximum)
2014-12-23 11:11:02,790 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,791 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Department as d join ( sum d.getEmploys().getSalary() - d.getBoss().getSalary()) as s).(d.getName(), s)
2014-12-23 11:11:02,793 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,793 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Department as d join ( sum d.getEmploys().getSalary() - d.getBoss().getSalary()) as s).(d.getName(), s)
2014-12-23 11:11:02,795 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,795 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Department as d join ( sum d.getEmploys().getSalary() - d.getBoss().getSalary()) as s).(d.getName(), s)
2014-12-23 11:11:02,800 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,801 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.(Department as d join ( sum d.getEmploys().getSalary() - d.getBoss().getSalary()) as s).(d.getName(), s)
2014-12-23 11:11:02,805 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,805 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( all Department as d  any d.getEmploys() minus d.getBoss() as e e.getSalary() == d.getBoss().getSalary())
2014-12-23 11:11:02,808 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,808 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( all Department as d  any d.getEmploys() minus d.getBoss() as e e.getSalary() == d.getBoss().getSalary())
2014-12-23 11:11:02,810 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,810 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( all Department as d  any d.getEmploys() minus d.getBoss() as e e.getSalary() == d.getBoss().getSalary())
2014-12-23 11:11:02,814 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,814 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( all Department as d  any d.getEmploys() minus d.getBoss() as e e.getSalary() == d.getBoss().getSalary())
2014-12-23 11:11:02,817 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,817 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Employee.("Employee " + getName() + " consumes " + getSalary() * 12 * 100/ getWorksIn().getBudget() + "% of the " + getWorksIn().getName() + " department budget.")
2014-12-23 11:11:02,819 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,819 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Employee.("Employee " + getName() + " consumes " + getSalary() * 12 * 100/ getWorksIn().getBudget() + "% of the " + getWorksIn().getName() + " department budget.")
2014-12-23 11:11:02,821 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,821 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Employee.("Employee " + getName() + " consumes " + getSalary() * 12 * 100/ getWorksIn().getBudget() + "% of the " + getWorksIn().getName() + " department budget.")
2014-12-23 11:11:02,824 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,824 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.Employee.("Employee " + getName() + " consumes " + getSalary() * 12 * 100/ getWorksIn().getBudget() + "% of the " + getWorksIn().getName() + " department budget.")
2014-12-23 11:11:02,826 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,826 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Department.getLocation() as deptcity where  all Department deptcity in getLocation())
2014-12-23 11:11:02,828 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,828 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Department.getLocation() as deptcity where  all Department deptcity in getLocation())
2014-12-23 11:11:02,829 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,830 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Department.getLocation() as deptcity where  all Department deptcity in getLocation())
2014-12-23 11:11:02,832 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,833 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Department.getLocation() as deptcity where  all Department deptcity in getLocation())
2014-12-23 11:11:02,859 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,860 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((0 as i close by (i + 1000 where i <=  max(Employee.getSalary())) as i join  count((Employee where getSalary() >= i and getSalary() < i + 1000)) as c join c == 1 ? "" as n, "s" as v : "s" as n, "" as v).(c + " employee" + n + " earn" + v + " between " + i + " and " + i + 999) as message)
2014-12-23 11:11:02,865 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,866 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((0 as i close by (i + 1000 where i <=  max(Employee.getSalary())) as i join  count((Employee where getSalary() >= i and getSalary() < i + 1000)) as c join c == 1 ? "" as n, "s" as v : "s" as n, "" as v).(c + " employee" + n + " earn" + v + " between " + i + " and " + i + 999) as message)
2014-12-23 11:11:02,870 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,870 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((0 as i close by (i + 1000 where i <=  max(Employee.getSalary())) as i join  count((Employee where getSalary() >= i and getSalary() < i + 1000)) as c join c == 1 ? "" as n, "s" as v : "s" as n, "" as v).(c + " employee" + n + " earn" + v + " between " + i + " and " + i + 999) as message)
2014-12-23 11:11:02,876 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,876 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((0 as i close by (i + 1000 where i <=  max(Employee.getSalary())) as i join  count((Employee where getSalary() >= i and getSalary() < i + 1000)) as c join c == 1 ? "" as n, "s" as v : "s" as n, "" as v).(c + " employee" + n + " earn" + v + " between " + i + " and " + i + 999) as message)
2014-12-23 11:11:02,884 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,884 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Department.getLocation() as deptcity).((Department where deptcity in getLocation()) group as citydepts where  count(citydepts.getEmploys().(Employee where getJob() == "clerk")) < 100).(deptcity as cityLocation, citydepts.getName() group as cityDeptNames,  avg(citydepts.getBoss().getSalary()) as cityDeptBossAvgSal)
2014-12-23 11:11:02,889 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,889 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.( unique Department.getLocation() as deptcity).((Department where deptcity in getLocation()) group as citydepts where  count(citydepts.getEmploys().(Employee where getJob() == "clerk")) < 100).(deptcity as cityLocation, citydepts.getName() group as cityDeptNames,  avg(citydepts.getBoss().getSalary()) as cityDeptBossAvgSal)
2014-12-23 11:11:02,902 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,902 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Employee where getJob() == "clerk") group as _aux0).( unique Department.getLocation() as deptcity).(deptcity as cityLocation group as _aux1).((Department where deptcity in getLocation()) group as citydepts where  count(citydepts.getEmploys()._aux0) < 100).(_aux1, citydepts.getName() group as cityDeptNames,  avg(citydepts.getBoss().getSalary()) as cityDeptBossAvgSal)
2014-12-23 11:11:02,907 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,907 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] db.((Employee where getJob() == "clerk") group as _aux0).( unique Department.getLocation() as deptcity).(deptcity as cityLocation group as _aux1).((Department where deptcity in getLocation()) group as citydepts where  count(citydepts.getEmploys()._aux0) < 100).(_aux1, citydepts.getName() group as cityDeptNames,  avg(citydepts.getBoss().getSalary()) as cityDeptBossAvgSal)
2014-12-23 11:11:02,909 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,909 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] depts join  avg(getEmploys().getSalary())
2014-12-23 11:11:02,910 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,910 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] depts join  avg(getEmploys().getSalary())
2014-12-23 11:11:02,911 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,911 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] depts join  avg(getEmploys().getSalary())
2014-12-23 11:11:02,913 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,914 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] depts join  avg(getEmploys().getSalary())
2014-12-23 11:11:02,916 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,916 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (emp where getSalary() < 2222).(getName(), getSalary(), getWorksIn().getName())
2014-12-23 11:11:02,918 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,918 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (emp where getSalary() < 2222).(getName(), getSalary(), getWorksIn().getName())
2014-12-23 11:11:02,920 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,920 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (emp where getSalary() < 2222).(getName(), getSalary(), getWorksIn().getName())
2014-12-23 11:11:02,923 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,924 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (emp where getSalary() < 2222).(getName(), getSalary(), getWorksIn().getName())
2014-12-23 11:11:02,926 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,926 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (emp where getWorksIn().getBoss().getName() == "Bert").getName()
2014-12-23 11:11:02,927 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,927 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (emp where getWorksIn().getBoss().getName() == "Bert").getName()
2014-12-23 11:11:02,928 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,929 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (emp where getWorksIn().getBoss().getName() == "Bert").getName()
2014-12-23 11:11:02,932 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,932 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (emp where getWorksIn().getBoss().getName() == "Bert").getName()
2014-12-23 11:11:02,935 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,936 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((emp where getName() == "Poe")[0]).getWorksIn().getBoss().getName()
2014-12-23 11:11:02,937 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,938 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((emp where getName() == "Poe")[0]).getWorksIn().getBoss().getName()
2014-12-23 11:11:02,940 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,940 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((emp where getName() == "Poe")[0]).getWorksIn().getBoss().getName()
2014-12-23 11:11:02,945 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,946 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((emp where getName() == "Poe")[0]).getWorksIn().getBoss().getName()
2014-12-23 11:11:02,950 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,950 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (dept where getBoss().getName() == "Bert").getEmploys().(getName(), ( exists getAddress() ? getAddress().getCity() : "No address"))
2014-12-23 11:11:02,953 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,953 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (dept where getBoss().getName() == "Bert").getEmploys().(getName(), ( exists getAddress() ? getAddress().getCity() : "No address"))
2014-12-23 11:11:02,955 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,956 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (dept where getBoss().getName() == "Bert").getEmploys().(getName(), ( exists getAddress() ? getAddress().getCity() : "No address"))
2014-12-23 11:11:02,961 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,961 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (dept where getBoss().getName() == "Bert").getEmploys().(getName(), ( exists getAddress() ? getAddress().getCity() : "No address"))
2014-12-23 11:11:02,964 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,964 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  min(dept.( count(getEmploys()))) as minimum,  avg(dept.( count(getEmploys()))) as average,  max(dept.( count(getEmploys()))) as maximum
2014-12-23 11:11:02,965 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,965 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  min(dept.( count(getEmploys()))) as minimum,  avg(dept.( count(getEmploys()))) as average,  max(dept.( count(getEmploys()))) as maximum
2014-12-23 11:11:02,966 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,966 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  min(dept.( count(getEmploys()))) as minimum,  avg(dept.( count(getEmploys()))) as average,  max(dept.( count(getEmploys()))) as maximum
2014-12-23 11:11:02,969 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,969 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  min(dept.( count(getEmploys()))) as minimum,  avg(dept.( count(getEmploys()))) as average,  max(dept.( count(getEmploys()))) as maximum
2014-12-23 11:11:02,972 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,972 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (dept as d join ( sum d.getEmploys().getSalary() - d.getBoss().getSalary()) as s).(d.getName(), s)
2014-12-23 11:11:02,974 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,974 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (dept as d join ( sum d.getEmploys().getSalary() - d.getBoss().getSalary()) as s).(d.getName(), s)
2014-12-23 11:11:02,975 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,976 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (dept as d join ( sum d.getEmploys().getSalary() - d.getBoss().getSalary()) as s).(d.getName(), s)
2014-12-23 11:11:02,979 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,979 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (dept as d join ( sum d.getEmploys().getSalary() - d.getBoss().getSalary()) as s).(d.getName(), s)
2014-12-23 11:11:02,981 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,981 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all dept as d  any d.getEmploys() minus d.getBoss() as e e.getSalary() == d.getBoss().getSalary()
2014-12-23 11:11:02,983 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,983 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all dept as d  any d.getEmploys() minus d.getBoss() as e e.getSalary() == d.getBoss().getSalary()
2014-12-23 11:11:02,984 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,985 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all dept as d  any d.getEmploys() minus d.getBoss() as e e.getSalary() == d.getBoss().getSalary()
2014-12-23 11:11:02,988 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,988 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all dept as d  any d.getEmploys() minus d.getBoss() as e e.getSalary() == d.getBoss().getSalary()
2014-12-23 11:11:02,990 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,991 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] emp.("Employee " + getName() + " consumes " + getSalary() * 12 * 100/ getWorksIn().getBudget() + "% of the " + getWorksIn().getName() + " department budget.")
2014-12-23 11:11:02,992 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,992 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] emp.("Employee " + getName() + " consumes " + getSalary() * 12 * 100/ getWorksIn().getBudget() + "% of the " + getWorksIn().getName() + " department budget.")
2014-12-23 11:11:02,993 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:02,994 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] emp.("Employee " + getName() + " consumes " + getSalary() * 12 * 100/ getWorksIn().getBudget() + "% of the " + getWorksIn().getName() + " department budget.")
2014-12-23 11:11:02,996 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:02,997 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] emp.("Employee " + getName() + " consumes " + getSalary() * 12 * 100/ getWorksIn().getBudget() + "% of the " + getWorksIn().getName() + " department budget.")
2014-12-23 11:11:02,998 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:02,998 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique dept.getLocation() as deptcity where  all dept deptcity in getLocation()
2014-12-23 11:11:02,999 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:02,999 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique dept.getLocation() as deptcity where  all dept deptcity in getLocation()
2014-12-23 11:11:03,000 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,000 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique dept.getLocation() as deptcity where  all dept deptcity in getLocation()
2014-12-23 11:11:03,003 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,003 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique dept.getLocation() as deptcity where  all dept deptcity in getLocation()
2014-12-23 11:11:03,007 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,007 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (0 as i close by (i + 1000 where i <=  max(emp.getSalary())) as i join  count((emp where getSalary() >= i and getSalary() < i + 1000)) as c join c == 1 ? "" as n, "s" as v : "s" as n, "" as v).(c + " employee" + n + " earn" + v + " between " + i + " and " + i + 999) as message
2014-12-23 11:11:03,010 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,010 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (0 as i close by (i + 1000 where i <=  max(emp.getSalary())) as i join  count((emp where getSalary() >= i and getSalary() < i + 1000)) as c join c == 1 ? "" as n, "s" as v : "s" as n, "" as v).(c + " employee" + n + " earn" + v + " between " + i + " and " + i + 999) as message
2014-12-23 11:11:03,012 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,012 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (0 as i close by (i + 1000 where i <=  max(emp.getSalary())) as i join  count((emp where getSalary() >= i and getSalary() < i + 1000)) as c join c == 1 ? "" as n, "s" as v : "s" as n, "" as v).(c + " employee" + n + " earn" + v + " between " + i + " and " + i + 999) as message
2014-12-23 11:11:03,016 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,016 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (0 as i close by (i + 1000 where i <=  max(emp.getSalary())) as i join  count((emp where getSalary() >= i and getSalary() < i + 1000)) as c join c == 1 ? "" as n, "s" as v : "s" as n, "" as v).(c + " employee" + n + " earn" + v + " between " + i + " and " + i + 999) as message
2014-12-23 11:11:03,020 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,020 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique dept.getLocation() as deptcity).((dept where deptcity in getLocation()) group as citydepts where  count(citydepts.getEmploys().(emp where getJob() == "clerk")) < 100).(deptcity as cityLocation, citydepts.getName() group as cityDeptNames,  avg(citydepts.getBoss().getSalary()) as cityDeptBossAvgSal)
2014-12-23 11:11:03,024 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,024 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique dept.getLocation() as deptcity).((dept where deptcity in getLocation()) group as citydepts where  count(citydepts.getEmploys().(emp where getJob() == "clerk")) < 100).(deptcity as cityLocation, citydepts.getName() group as cityDeptNames,  avg(citydepts.getBoss().getSalary()) as cityDeptBossAvgSal)
2014-12-23 11:11:03,036 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,037 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((emp where getJob() == "clerk") group as _aux0).( unique dept.getLocation() as deptcity).(deptcity as cityLocation group as _aux1).((dept where deptcity in getLocation()) group as citydepts where  count(citydepts.getEmploys()._aux0) < 100).(_aux1, citydepts.getName() group as cityDeptNames,  avg(citydepts.getBoss().getSalary()) as cityDeptBossAvgSal)
2014-12-23 11:11:03,043 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,043 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((emp where getJob() == "clerk") group as _aux0).( unique dept.getLocation() as deptcity).(deptcity as cityLocation group as _aux1).((dept where deptcity in getLocation()) group as citydepts where  count(citydepts.getEmploys()._aux0) < 100).(_aux1, citydepts.getName() group as cityDeptNames,  avg(citydepts.getBoss().getSalary()) as cityDeptBossAvgSal)
2014-12-23 11:11:03,046 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,046 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers as n where n < 5
2014-12-23 11:11:03,047 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,047 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers as n where n < 5
2014-12-23 11:11:03,047 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,047 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers as n where n < 5
2014-12-23 11:11:03,049 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,050 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers as n where n < 5
2014-12-23 11:11:03,051 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,052 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products where unitsInStock == 0
2014-12-23 11:11:03,052 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,053 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products where unitsInStock == 0
2014-12-23 11:11:03,053 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,054 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products where unitsInStock == 0
2014-12-23 11:11:03,057 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,057 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products where unitsInStock == 0
2014-12-23 11:11:03,059 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,059 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products where unitsInStock > 0 and unitPrice > 3.0
2014-12-23 11:11:03,060 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,060 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products where unitsInStock > 0 and unitPrice > 3.0
2014-12-23 11:11:03,061 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,061 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products where unitsInStock > 0 and unitPrice > 3.0
2014-12-23 11:11:03,063 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,063 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products where unitsInStock > 0 and unitPrice > 3.0
2014-12-23 11:11:03,065 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,065 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] customers where region == "WA"
2014-12-23 11:11:03,065 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,065 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] customers where region == "WA"
2014-12-23 11:11:03,066 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,066 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] customers where region == "WA"
2014-12-23 11:11:03,068 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,069 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] customers where region == "WA"
2014-12-23 11:11:03,071 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,071 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] digits where length() < $index
2014-12-23 11:11:03,073 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,073 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] digits where length() < $index
2014-12-23 11:11:03,074 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,074 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] digits where length() < $index
2014-12-23 11:11:03,078 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,078 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] digits where length() < $index
2014-12-23 11:11:03,079 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,079 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(n + 1)
2014-12-23 11:11:03,079 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,079 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(n + 1)
2014-12-23 11:11:03,080 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,080 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(n + 1)
2014-12-23 11:11:03,082 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,082 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(n + 1)
2014-12-23 11:11:03,083 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,083 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products.productName
2014-12-23 11:11:03,084 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,084 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products.productName
2014-12-23 11:11:03,084 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,085 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products.productName
2014-12-23 11:11:03,087 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,087 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products.productName
2014-12-23 11:11:03,088 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,088 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(strings[n])
2014-12-23 11:11:03,088 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,089 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(strings[n])
2014-12-23 11:11:03,089 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,089 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(strings[n])
2014-12-23 11:11:03,091 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,091 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(strings[n])
2014-12-23 11:11:03,093 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,093 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words.(toUpperCase() as upper, toLowerCase() as lower)
2014-12-23 11:11:03,095 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,095 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words.(toUpperCase() as upper, toLowerCase() as lower)
2014-12-23 11:11:03,096 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,097 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words.(toUpperCase() as upper, toLowerCase() as lower)
2014-12-23 11:11:03,100 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,100 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words.(toUpperCase() as upper, toLowerCase() as lower)
2014-12-23 11:11:03,101 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,101 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(strings[n] as digit, (n % 2 == 0) as even)
2014-12-23 11:11:03,102 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,102 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(strings[n] as digit, (n % 2 == 0) as even)
2014-12-23 11:11:03,102 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,102 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(strings[n] as digit, (n % 2 == 0) as even)
2014-12-23 11:11:03,104 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,104 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(strings[n] as digit, (n % 2 == 0) as even)
2014-12-23 11:11:03,106 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,106 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products.(productName as productName, category as category, unitPrice as price)
2014-12-23 11:11:03,106 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,106 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products.(productName as productName, category as category, unitPrice as price)
2014-12-23 11:11:03,107 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,107 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products.(productName as productName, category as category, unitPrice as price)
2014-12-23 11:11:03,109 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,109 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products.(productName as productName, category as category, unitPrice as price)
2014-12-23 11:11:03,110 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,110 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as num).(num as num, (num == $index) as inPlace)
2014-12-23 11:11:03,111 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,111 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as num).(num as num, (num == $index) as inPlace)
2014-12-23 11:11:03,111 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,111 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as num).(num as num, (num == $index) as inPlace)
2014-12-23 11:11:03,113 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,113 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as num).(num as num, (num == $index) as inPlace)
2014-12-23 11:11:03,114 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,115 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n where n < 5).(digits[n])
2014-12-23 11:11:03,115 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,115 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n where n < 5).(digits[n])
2014-12-23 11:11:03,116 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,116 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n where n < 5).(digits[n])
2014-12-23 11:11:03,118 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,118 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n where n < 5).(digits[n])
2014-12-23 11:11:03,119 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,119 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA as a, numbersB as b where a < b
2014-12-23 11:11:03,119 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,119 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA as a, numbersB as b where a < b
2014-12-23 11:11:03,120 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,120 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA as a, numbersB as b where a < b
2014-12-23 11:11:03,122 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,122 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA as a, numbersB as b where a < b
2014-12-23 11:11:03,124 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,125 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers where  exists (orders where total < 500.0) join orders where total < 500.0).(customerID as customerId, orderID as orderID, total as total)
2014-12-23 11:11:03,126 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,126 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers where  exists (orders where total < 500.0) join orders where total < 500.0).(customerID as customerId, orderID as orderID, total as total)
2014-12-23 11:11:03,127 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,127 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers where  exists (orders where total < 500.0) join orders where total < 500.0).(customerID as customerId, orderID as orderID, total as total)
2014-12-23 11:11:03,130 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,130 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers where  exists (orders where total < 500.0) join orders where total < 500.0).(customerID as customerId, orderID as orderID, total as total)
2014-12-23 11:11:03,133 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,133 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers join orders where orderDate > d).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:03,135 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,136 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers join orders where orderDate > d).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:03,138 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,138 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers join orders where orderDate > d).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:03,143 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,143 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers join orders where orderDate > d).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:03,146 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,147 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c join (c.orders as o where o.total > 2000) as j where  exists j).(c.customerID as customerID, j.o.orderID as orderID, j.o.total as total)
2014-12-23 11:11:03,149 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,149 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c join (c.orders as o where o.total > 2000) as j where  exists j).(c.customerID as customerID, j.o.orderID as orderID, j.o.total as total)
2014-12-23 11:11:03,151 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,151 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c join (c.orders as o where o.total > 2000) as j where  exists j).(c.customerID as customerID, j.o.orderID as orderID, j.o.total as total)
2014-12-23 11:11:03,156 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,156 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c join (c.orders as o where o.total > 2000) as j where  exists j).(c.customerID as customerID, j.o.orderID as orderID, j.o.total as total)
2014-12-23 11:11:03,160 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,161 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c where c.region == "WA" join c.orders as o where o.orderDate >= cutoffDate).(c.customerID as customerID, o.orderID as orderID)
2014-12-23 11:11:03,164 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,164 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c where c.region == "WA" join c.orders as o where o.orderDate >= cutoffDate).(c.customerID as customerID, o.orderID as orderID)
2014-12-23 11:11:03,166 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,167 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c where c.region == "WA" join c.orders as o where o.orderDate >= cutoffDate).(c.customerID as customerID, o.orderID as orderID)
2014-12-23 11:11:03,171 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,172 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c where c.region == "WA" join c.orders as o where o.orderDate >= cutoffDate).(c.customerID as customerID, o.orderID as orderID)
2014-12-23 11:11:03,174 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,174 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((customers where  exists orders) as c).($index as custIndex, c.orders as o).("Customer #" + custIndex + 1 + " has an order with OrderID " + o.orderID)
2014-12-23 11:11:03,176 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,176 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((customers where  exists orders) as c).($index as custIndex, c.orders as o).("Customer #" + custIndex + 1 + " has an order with OrderID " + o.orderID)
2014-12-23 11:11:03,177 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,177 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((customers where  exists orders) as c).($index as custIndex, c.orders as o).("Customer #" + custIndex + 1 + " has an order with OrderID " + o.orderID)
2014-12-23 11:11:03,180 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,180 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((customers where  exists orders) as c).($index as custIndex, c.orders as o).("Customer #" + custIndex + 1 + " has an order with OrderID " + o.orderID)
2014-12-23 11:11:03,182 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,182 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers[0..2]
2014-12-23 11:11:03,183 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,183 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers[0..2]
2014-12-23 11:11:03,183 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,183 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers[0..2]
2014-12-23 11:11:03,186 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,186 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers[0..2]
2014-12-23 11:11:03,188 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,189 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((customers where region == "WA" join orders)[0..2]).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:03,190 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,190 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((customers where region == "WA" join orders)[0..2]).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:03,191 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,191 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((customers where region == "WA" join orders)[0..2]).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:03,194 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,194 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((customers where region == "WA" join orders)[0..2]).(customerID as customerID, orderID as orderID, orderDate as orderDate)
2014-12-23 11:11:03,195 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,195 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers[4..*]
2014-12-23 11:11:03,195 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,196 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers[4..*]
2014-12-23 11:11:03,196 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,196 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers[4..*]
2014-12-23 11:11:03,198 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,198 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers[4..*]
2014-12-23 11:11:03,200 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,200 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((customers as c where c.region == "WA" join c.orders as o)[2..*]).(c.customerID as customerID, o.orderID as orderID, o.orderDate as orderDate)
2014-12-23 11:11:03,202 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,202 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((customers as c where c.region == "WA" join c.orders as o)[2..*]).(c.customerID as customerID, o.orderID as orderID, o.orderDate as orderDate)
2014-12-23 11:11:03,203 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,204 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((customers as c where c.region == "WA" join c.orders as o)[2..*]).(c.customerID as customerID, o.orderID as orderID, o.orderDate as orderDate)
2014-12-23 11:11:03,207 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,207 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ((customers as c where c.region == "WA" join c.orders as o)[2..*]).(c.customerID as customerID, o.orderID as orderID, o.orderDate as orderDate)
2014-12-23 11:11:03,208 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,208 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w)
2014-12-23 11:11:03,208 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,209 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w)
2014-12-23 11:11:03,209 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,209 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w)
2014-12-23 11:11:03,211 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,211 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w)
2014-12-23 11:11:03,213 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,213 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w.length())
2014-12-23 11:11:03,215 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,215 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w.length())
2014-12-23 11:11:03,217 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,217 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w.length())
2014-12-23 11:11:03,220 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,220 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w.length())
2014-12-23 11:11:03,221 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,221 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products as p order by (p.productName)
2014-12-23 11:11:03,222 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,222 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products as p order by (p.productName)
2014-12-23 11:11:03,222 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,222 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products as p order by (p.productName)
2014-12-23 11:11:03,225 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,225 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products as p order by (p.productName)
2014-12-23 11:11:03,226 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,227 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w using comp)
2014-12-23 11:11:03,227 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,227 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w using comp)
2014-12-23 11:11:03,227 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,228 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w using comp)
2014-12-23 11:11:03,230 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,230 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w using comp)
2014-12-23 11:11:03,232 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,232 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] doubles as d order by (d DESC )
2014-12-23 11:11:03,232 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,232 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] doubles as d order by (d DESC )
2014-12-23 11:11:03,233 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,233 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] doubles as d order by (d DESC )
2014-12-23 11:11:03,235 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,235 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] doubles as d order by (d DESC )
2014-12-23 11:11:03,236 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,237 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products order by (unitsInStock DESC )
2014-12-23 11:11:03,238 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,238 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products order by (unitsInStock DESC )
2014-12-23 11:11:03,239 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,239 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products order by (unitsInStock DESC )
2014-12-23 11:11:03,242 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,243 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products order by (unitsInStock DESC )
2014-12-23 11:11:03,247 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,247 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words order by (toLowerCase() DESC )
2014-12-23 11:11:03,250 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,251 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words order by (toLowerCase() DESC )
2014-12-23 11:11:03,254 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,254 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words order by (toLowerCase() DESC )
2014-12-23 11:11:03,260 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,260 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words order by (toLowerCase() DESC )
2014-12-23 11:11:03,262 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,263 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] digits as d order by (d.length(), d)
2014-12-23 11:11:03,264 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,265 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] digits as d order by (d.length(), d)
2014-12-23 11:11:03,282 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,282 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] digits as d order by (d.length(), d)
2014-12-23 11:11:03,285 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,285 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] digits as d order by (d.length(), d)
2014-12-23 11:11:03,288 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,288 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w.length(), w using comp)
2014-12-23 11:11:03,290 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,290 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w.length(), w using comp)
2014-12-23 11:11:03,291 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,292 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w.length(), w using comp)
2014-12-23 11:11:03,294 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,295 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w.length(), w using comp)
2014-12-23 11:11:03,296 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,296 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products order by (category, unitPrice DESC )
2014-12-23 11:11:03,297 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,297 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products order by (category, unitPrice DESC )
2014-12-23 11:11:03,297 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,297 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products order by (category, unitPrice DESC )
2014-12-23 11:11:03,299 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,300 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] products order by (category, unitPrice DESC )
2014-12-23 11:11:03,302 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,303 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w.length(), w using comp)
2014-12-23 11:11:03,304 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,304 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w.length(), w using comp)
2014-12-23 11:11:03,306 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,306 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w.length(), w using comp)
2014-12-23 11:11:03,309 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,309 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] words as w order by (w.length(), w using comp)
2014-12-23 11:11:03,310 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,311 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique (numbers as n).(n % 5) as r).(r as remainder, (numbers as n where n % 5 == r) group as numbers)
2014-12-23 11:11:03,311 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,311 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique (numbers as n).(n % 5) as r).(r as remainder, (numbers as n where n % 5 == r) group as numbers)
2014-12-23 11:11:03,312 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,312 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n group as _aux0).( unique (numbers as n).(n % 5) as r).(r as remainder, (_aux0 where n % 5 == r) group as numbers)
2014-12-23 11:11:03,314 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,315 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n group as _aux0).( unique (numbers as n).(n % 5) as r).(r as remainder, (_aux0 where n % 5 == r) group as numbers)
2014-12-23 11:11:03,318 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,319 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique words.charAt(0) as f).(f as firstLetter, (words as w where w.charAt(0) == f) group as words)
2014-12-23 11:11:03,322 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,322 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique words.charAt(0) as f).(f as firstLetter, (words as w where w.charAt(0) == f) group as words)
2014-12-23 11:11:03,328 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,329 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (words as w group as _aux0).( unique words.charAt(0) as f).(f as firstLetter, (_aux0 where w.charAt(0) == f) group as words)
2014-12-23 11:11:03,333 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,333 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (words as w group as _aux0).( unique words.charAt(0) as f).(f as firstLetter, (_aux0 where w.charAt(0) == f) group as words)
2014-12-23 11:11:03,335 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,335 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as c).(c as category, (products where category == c) group as products)
2014-12-23 11:11:03,336 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,336 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as c).(c as category, (products where category == c) group as products)
2014-12-23 11:11:03,336 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,337 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as c).(c as category, (products where category == c) group as products)
2014-12-23 11:11:03,339 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,339 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as c).(c as category, (products where category == c) group as products)
2014-12-23 11:11:03,344 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,344 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c).(c.companyName as companyName join ( unique c.orders.orderDate.getYear() as year join (c.orders where orderDate.getYear() == year) group as yearGroups).(year as year, ( unique yearGroups.orderDate.getMonth() as month join (yearGroups where orderDate.getMonth() == month) group as orders) group as monthGroups) group as yearGroups)
2014-12-23 11:11:03,347 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,347 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c).(c.companyName as companyName join ( unique c.orders.orderDate.getYear() as year join (c.orders where orderDate.getYear() == year) group as yearGroups).(year as year, ( unique yearGroups.orderDate.getMonth() as month join (yearGroups where orderDate.getMonth() == month) group as orders) group as monthGroups) group as yearGroups)
2014-12-23 11:11:03,353 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,354 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c).(( unique c.orders.orderDate.getYear() as year join (c.orders where orderDate.getYear() == year) group as yearGroups).(year as year, ( unique yearGroups.orderDate.getMonth() as month join (yearGroups where orderDate.getMonth() == month) group as orders) group as monthGroups) group as yearGroups group as _aux0).(c.companyName as companyName join _aux0)
2014-12-23 11:11:03,370 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,371 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c).(( unique c.orders.orderDate.getYear() as year join (c.orders where orderDate.getYear() == year) group as yearGroups).(year as year, ( unique yearGroups.orderDate.getMonth() as month join (yearGroups where orderDate.getMonth() == month) group as orders) group as monthGroups) group as yearGroups group as _aux0).(c.companyName as companyName join _aux0)
2014-12-23 11:11:03,372 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,372 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique factorsOf300
2014-12-23 11:11:03,372 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,373 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique factorsOf300
2014-12-23 11:11:03,373 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,373 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique factorsOf300
2014-12-23 11:11:03,375 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,375 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique factorsOf300
2014-12-23 11:11:03,376 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,377 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique products.category
2014-12-23 11:11:03,377 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,378 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique products.category
2014-12-23 11:11:03,378 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,379 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique products.category
2014-12-23 11:11:03,381 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,381 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique products.category
2014-12-23 11:11:03,382 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,382 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique (numbersA union numbersB)
2014-12-23 11:11:03,382 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,382 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique (numbersA union numbersB)
2014-12-23 11:11:03,383 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,383 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique (numbersA union numbersB)
2014-12-23 11:11:03,385 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,385 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique (numbersA union numbersB)
2014-12-23 11:11:03,388 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,389 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique (products.productName.charAt(0) union customers.companyName.charAt(0))
2014-12-23 11:11:03,392 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,392 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique (products.productName.charAt(0) union customers.companyName.charAt(0))
2014-12-23 11:11:03,394 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,395 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique (products.productName.charAt(0) union customers.companyName.charAt(0))
2014-12-23 11:11:03,400 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,400 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique (products.productName.charAt(0) union customers.companyName.charAt(0))
2014-12-23 11:11:03,401 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,401 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA intersect numbersB
2014-12-23 11:11:03,402 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,402 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA intersect numbersB
2014-12-23 11:11:03,402 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,402 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA intersect numbersB
2014-12-23 11:11:03,408 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,409 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA intersect numbersB
2014-12-23 11:11:03,413 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,414 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique products.productName.charAt(0) intersect customers.companyName.charAt(0)
2014-12-23 11:11:03,417 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,417 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique products.productName.charAt(0) intersect customers.companyName.charAt(0)
2014-12-23 11:11:03,420 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,420 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique products.productName.charAt(0) intersect customers.companyName.charAt(0)
2014-12-23 11:11:03,424 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,425 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique products.productName.charAt(0) intersect customers.companyName.charAt(0)
2014-12-23 11:11:03,425 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,426 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA minus numbersB
2014-12-23 11:11:03,426 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,426 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA minus numbersB
2014-12-23 11:11:03,426 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,426 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA minus numbersB
2014-12-23 11:11:03,428 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,428 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA minus numbersB
2014-12-23 11:11:03,432 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,432 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique products.productName.charAt(0) minus  unique customers.companyName.charAt(0)
2014-12-23 11:11:03,435 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,435 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique products.productName.charAt(0) minus  unique customers.companyName.charAt(0)
2014-12-23 11:11:03,438 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,438 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique products.productName.charAt(0) minus  unique customers.companyName.charAt(0)
2014-12-23 11:11:03,443 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,443 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  unique products.productName.charAt(0) minus  unique customers.companyName.charAt(0)
2014-12-23 11:11:03,444 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,444 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers as n where n instanceof Double
2014-12-23 11:11:03,445 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,445 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers as n where n instanceof Double
2014-12-23 11:11:03,445 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,446 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers as n where n instanceof Double
2014-12-23 11:11:03,447 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,448 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbers as n where n instanceof Double
2014-12-23 11:11:03,450 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,450 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (products where productID == 12)[0]
2014-12-23 11:11:03,451 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,451 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (products where productID == 12)[0]
2014-12-23 11:11:03,452 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,452 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (products where productID == 12)[0]
2014-12-23 11:11:03,456 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,456 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (products where productID == 12)[0]
2014-12-23 11:11:03,460 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,460 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (strings as s where s.charAt(0) == 'o')[0]
2014-12-23 11:11:03,462 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,462 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (strings as s where s.charAt(0) == 'o')[0]
2014-12-23 11:11:03,464 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,464 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (strings as s where s.charAt(0) == 'o')[0]
2014-12-23 11:11:03,468 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,468 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (strings as s where s.charAt(0) == 'o')[0]
2014-12-23 11:11:03,469 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,470 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n where n > 5)[1]
2014-12-23 11:11:03,470 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,470 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n where n > 5)[1]
2014-12-23 11:11:03,471 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,471 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n where n > 5)[1]
2014-12-23 11:11:03,473 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,474 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n where n > 5)[1]
2014-12-23 11:11:03,479 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,479 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  any words contains("ei")
2014-12-23 11:11:03,482 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,482 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  any words contains("ei")
2014-12-23 11:11:03,483 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,483 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  any words contains("ei")
2014-12-23 11:11:03,487 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,487 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  any words contains("ei")
2014-12-23 11:11:03,489 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,489 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category, (products where category == cat) group as products) where  any products unitsInStock == 0
2014-12-23 11:11:03,490 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,490 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category, (products where category == cat) group as products) where  any products unitsInStock == 0
2014-12-23 11:11:03,491 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,491 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category, (products where category == cat) group as products) where  any products unitsInStock == 0
2014-12-23 11:11:03,494 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,494 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category, (products where category == cat) group as products) where  any products unitsInStock == 0
2014-12-23 11:11:03,496 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,496 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all numbers as n n % 2 == 1
2014-12-23 11:11:03,497 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,497 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all numbers as n n % 2 == 1
2014-12-23 11:11:03,497 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,498 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all numbers as n n % 2 == 1
2014-12-23 11:11:03,500 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,500 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all numbers as n n % 2 == 1
2014-12-23 11:11:03,502 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,502 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category, (products where category == cat) group as products) where  all products unitsInStock > 0
2014-12-23 11:11:03,503 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,504 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category, (products where category == cat) group as products) where  all products unitsInStock > 0
2014-12-23 11:11:03,504 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,505 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category, (products where category == cat) group as products) where  all products unitsInStock > 0
2014-12-23 11:11:03,507 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,507 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category, (products where category == cat) group as products) where  all products unitsInStock > 0
2014-12-23 11:11:03,508 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,508 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  count( unique factorsOf300)
2014-12-23 11:11:03,508 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,509 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  count( unique factorsOf300)
2014-12-23 11:11:03,509 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,509 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  count( unique factorsOf300)
2014-12-23 11:11:03,511 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,511 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  count( unique factorsOf300)
2014-12-23 11:11:03,512 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,512 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  count((numbers as n where n % 2 == 1))
2014-12-23 11:11:03,513 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,513 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  count((numbers as n where n % 2 == 1))
2014-12-23 11:11:03,513 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,514 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  count((numbers as n where n % 2 == 1))
2014-12-23 11:11:03,516 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,517 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  count((numbers as n where n % 2 == 1))
2014-12-23 11:11:03,519 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,519 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c).(c.customerID as customerID,  count(c.orders) as orderCount)
2014-12-23 11:11:03,521 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,521 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c).(c.customerID as customerID,  count(c.orders) as orderCount)
2014-12-23 11:11:03,522 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,523 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c).(c.customerID as customerID,  count(c.orders) as orderCount)
2014-12-23 11:11:03,527 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,527 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (customers as c).(c.customerID as customerID,  count(c.orders) as orderCount)
2014-12-23 11:11:03,529 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,529 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  count((products where category == cat)) as productCount)
2014-12-23 11:11:03,530 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,530 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  count((products where category == cat)) as productCount)
2014-12-23 11:11:03,531 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,531 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  count((products where category == cat)) as productCount)
2014-12-23 11:11:03,534 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,534 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  count((products where category == cat)) as productCount)
2014-12-23 11:11:03,535 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,536 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  sum numbers
2014-12-23 11:11:03,536 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,536 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  sum numbers
2014-12-23 11:11:03,537 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,537 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  sum numbers
2014-12-23 11:11:03,539 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,539 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  sum numbers
2014-12-23 11:11:03,542 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,542 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  sum words.length()
2014-12-23 11:11:03,544 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,544 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  sum words.length()
2014-12-23 11:11:03,545 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,545 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  sum words.length()
2014-12-23 11:11:03,549 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,549 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  sum words.length()
2014-12-23 11:11:03,551 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,551 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  sum (products where category == cat).unitsInStock as totalUnitsInStock)
2014-12-23 11:11:03,552 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,552 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  sum (products where category == cat).unitsInStock as totalUnitsInStock)
2014-12-23 11:11:03,553 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,554 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  sum (products where category == cat).unitsInStock as totalUnitsInStock)
2014-12-23 11:11:03,556 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,557 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  sum (products where category == cat).unitsInStock as totalUnitsInStock)
2014-12-23 11:11:03,558 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,558 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  min(numbers)
2014-12-23 11:11:03,558 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,559 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  min(numbers)
2014-12-23 11:11:03,559 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,559 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  min(numbers)
2014-12-23 11:11:03,562 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,562 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  min(numbers)
2014-12-23 11:11:03,566 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,566 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  min(words.length())
2014-12-23 11:11:03,569 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,569 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  min(words.length())
2014-12-23 11:11:03,572 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,572 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  min(words.length())
2014-12-23 11:11:03,577 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,577 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  min(words.length())
2014-12-23 11:11:03,579 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,579 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  min((products where category == cat).unitPrice) as cheapestPrice)
2014-12-23 11:11:03,581 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,581 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  min((products where category == cat).unitPrice) as cheapestPrice)
2014-12-23 11:11:03,583 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,583 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  min((products where category == cat).unitPrice) as cheapestPrice)
2014-12-23 11:11:03,587 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,587 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  min((products where category == cat).unitPrice) as cheapestPrice)
2014-12-23 11:11:03,591 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,591 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as cat, (products where category == cat) group as pr).(cat as category, (pr where unitPrice ==  min(pr.unitPrice)) group as cheapestProducts)
2014-12-23 11:11:03,594 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,594 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as cat, (products where category == cat) group as pr).(cat as category, (pr where unitPrice ==  min(pr.unitPrice)) group as cheapestProducts)
2014-12-23 11:11:03,598 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,598 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as cat, (products where category == cat) group as pr).(cat as category, ( min(pr.unitPrice) group as _aux0).(pr where unitPrice == _aux0) group as cheapestProducts)
2014-12-23 11:11:03,601 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,602 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as cat, (products where category == cat) group as pr).(cat as category, ( min(pr.unitPrice) group as _aux0).(pr where unitPrice == _aux0) group as cheapestProducts)
2014-12-23 11:11:03,603 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,603 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  max(numbers)
2014-12-23 11:11:03,603 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,603 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  max(numbers)
2014-12-23 11:11:03,603 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,604 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  max(numbers)
2014-12-23 11:11:03,605 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,606 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  max(numbers)
2014-12-23 11:11:03,608 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,608 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  max(words.length())
2014-12-23 11:11:03,610 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,610 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  max(words.length())
2014-12-23 11:11:03,612 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,613 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  max(words.length())
2014-12-23 11:11:03,618 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,619 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  max(words.length())
2014-12-23 11:11:03,621 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,621 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  max((products where category == cat).unitPrice) as mostExpensivePrice)
2014-12-23 11:11:03,622 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,622 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  max((products where category == cat).unitPrice) as mostExpensivePrice)
2014-12-23 11:11:03,623 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,624 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  max((products where category == cat).unitPrice) as mostExpensivePrice)
2014-12-23 11:11:03,626 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,627 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  max((products where category == cat).unitPrice) as mostExpensivePrice)
2014-12-23 11:11:03,629 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,629 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as cat, (products where category == cat) group as pr).(cat as category, (pr where unitPrice ==  max(pr.unitPrice)) group as mostExpensiveProducts)
2014-12-23 11:11:03,631 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,631 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as cat, (products where category == cat) group as pr).(cat as category, (pr where unitPrice ==  max(pr.unitPrice)) group as mostExpensiveProducts)
2014-12-23 11:11:03,634 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,634 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as cat, (products where category == cat) group as pr).(cat as category, ( max(pr.unitPrice) group as _aux0).(pr where unitPrice == _aux0) group as mostExpensiveProducts)
2014-12-23 11:11:03,638 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,639 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as cat, (products where category == cat) group as pr).(cat as category, ( max(pr.unitPrice) group as _aux0).(pr where unitPrice == _aux0) group as mostExpensiveProducts)
2014-12-23 11:11:03,640 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,641 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  avg(numbers)
2014-12-23 11:11:03,641 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,641 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  avg(numbers)
2014-12-23 11:11:03,641 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,642 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  avg(numbers)
2014-12-23 11:11:03,644 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,644 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  avg(numbers)
2014-12-23 11:11:03,646 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,647 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  avg(words.length())
2014-12-23 11:11:03,649 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,650 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  avg(words.length())
2014-12-23 11:11:03,652 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,652 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  avg(words.length())
2014-12-23 11:11:03,656 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,656 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  avg(words.length())
2014-12-23 11:11:03,658 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,658 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  avg((products where category == cat).unitPrice) as averagePrice)
2014-12-23 11:11:03,659 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,660 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  avg((products where category == cat).unitPrice) as averagePrice)
2014-12-23 11:11:03,661 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,661 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  avg((products where category == cat).unitPrice) as averagePrice)
2014-12-23 11:11:03,663 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,663 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] ( unique products.category as cat).(cat as category,  avg((products where category == cat).unitPrice) as averagePrice)
2014-12-23 11:11:03,664 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,664 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA union numbersB
2014-12-23 11:11:03,664 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,665 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA union numbersB
2014-12-23 11:11:03,665 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,665 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA union numbersB
2014-12-23 11:11:03,666 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,667 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] numbersA union numbersB
2014-12-23 11:11:03,668 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,668 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] customers.companyName union products.productName
2014-12-23 11:11:03,669 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,669 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] customers.companyName union products.productName
2014-12-23 11:11:03,669 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,670 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] customers.companyName union products.productName
2014-12-23 11:11:03,671 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,672 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] customers.companyName union products.productName
2014-12-23 11:11:03,673 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,673 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all wordsA as a a == wordsB[$index]
2014-12-23 11:11:03,673 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,673 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all wordsA as a a == wordsB[$index]
2014-12-23 11:11:03,673 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,674 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all wordsA as a a == wordsB[$index]
2014-12-23 11:11:03,675 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,675 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all wordsA as a a == wordsB[$index]
2014-12-23 11:11:03,677 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,677 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all 1 true
2014-12-23 11:11:03,678 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,678 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all 1 true
2014-12-23 11:11:03,679 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,679 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all 1 true
2014-12-23 11:11:03,681 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,682 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  all 1 true
2014-12-23 11:11:03,683 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,683 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(n as n, (n % 2 == 1 ? "odd" : "even"))
2014-12-23 11:11:03,683 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,683 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(n as n, (n % 2 == 1 ? "odd" : "even"))
2014-12-23 11:11:03,684 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,684 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(n as n, (n % 2 == 1 ? "odd" : "even"))
2014-12-23 11:11:03,686 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,686 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] (numbers as n).(n as n, (n % 2 == 1 ? "odd" : "even"))
2014-12-23 11:11:03,687 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,687 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] pr.category
2014-12-23 11:11:03,688 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,688 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] pr.category
2014-12-23 11:11:03,688 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,688 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] pr.category
2014-12-23 11:11:03,690 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,690 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] pr.category
2014-12-23 11:11:03,957 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:03,957 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue
2014-12-23 11:11:03,968 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:03,968 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue
2014-12-23 11:11:03,979 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:03,979 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue
2014-12-23 11:11:03,991 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:03,991 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue
2014-12-23 11:11:04,003 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:04,003 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue.book
2014-12-23 11:11:04,023 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:04,023 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue.book
2014-12-23 11:11:04,034 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:04,034 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue.book
2014-12-23 11:11:04,045 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:04,046 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue.book
2014-12-23 11:11:04,055 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:04,056 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue.book.price
2014-12-23 11:11:04,065 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:04,065 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue.book.price
2014-12-23 11:11:04,078 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:04,079 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue.book.price
2014-12-23 11:11:04,090 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:04,090 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue.book.price
2014-12-23 11:11:04,101 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:04,101 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue.book.(price where kind == "retail")
2014-12-23 11:11:04,116 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:04,116 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue.book.(price where kind == "retail")
2014-12-23 11:11:04,132 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:04,132 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue.book.(price where kind == "retail")
2014-12-23 11:11:04,145 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:04,146 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] xmlSource.catalogue.book.(price where kind == "retail")
2014-12-23 11:11:04,161 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:04,161 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  sum (xmlSource.catalogue.book.price where kind == "retail")
2014-12-23 11:11:04,176 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:04,176 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  sum (xmlSource.catalogue.book.price where kind == "retail")
2014-12-23 11:11:04,188 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:04,188 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  sum (xmlSource.catalogue.book.price where kind == "retail")
2014-12-23 11:11:04,202 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:04,203 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  sum (xmlSource.catalogue.book.price where kind == "retail")
2014-12-23 11:11:04,214 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query before optimization: 
2014-12-23 11:11:04,214 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  avg(xmlSource.catalogue.book.price where kind == "retail")
2014-12-23 11:11:04,230 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after dead subqueries optimization: 
2014-12-23 11:11:04,231 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  avg(xmlSource.catalogue.book.price where kind == "retail")
2014-12-23 11:11:04,245 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after independent subqueries optimization: 
2014-12-23 11:11:04,246 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  avg(xmlSource.catalogue.book.price where kind == "retail")
2014-12-23 11:11:04,258 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement] Query after db4o index optimization: 
2014-12-23 11:11:04,258 INFO  [pl.wcislo.sbql4j.java.utils.SBQL4JStatement]  avg(xmlSource.catalogue.book.price where kind == "retail")
2014-12-23 11:11:04,288 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Sucessfully preprocessed task
2014-12-23 11:11:04,452 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\edu\pjwstk\jps\ExampleData.java
2014-12-23 11:11:04,730 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\edu\pjwstk\jps\JPSQueries1.java
2014-12-23 11:11:04,733 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\my\sbql4j\examples\SimpleQuery.java
2014-12-23 11:11:04,760 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\javac\test\ConditionalTest.java
2014-12-23 11:11:04,816 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\javac\test\OrderByTest.java
2014-12-23 11:11:04,855 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\examples\db4o\Db4oEmpTest.java
2014-12-23 11:11:04,858 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\examples\db4o\Db4oIndexQueries.java
2014-12-23 11:11:05,026 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\javac\test\db4o\Db4oOperatorTest.java
2014-12-23 11:11:05,468 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\examples\db4o\Db4oSimpleTest.java
2014-12-23 11:11:05,511 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\examples\db4o\LinqQueriesDb4o.java
2014-12-23 11:11:07,073 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\examples\db4o\advanced\ADBIS.java
2014-12-23 11:11:07,142 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\examples\db4o\advanced\AdvancedQueriesDb4o.java
2014-12-23 11:11:07,474 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\examples\java_heap\advanced\AdvancedQueriesJavaHeap.java
2014-12-23 11:11:07,695 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\examples\java_heap\linq\LinqQueriesJavaHeap.java
2014-12-23 11:11:08,452 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\examples\java_heap\operators\OperatorExamples.java
2014-12-23 11:11:08,471 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\javac\test\view\CompileTest.java
2014-12-23 11:11:08,482 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\javac\test\view\Customer.java
2014-12-23 11:11:08,483 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\javac\test\view\Product.java
2014-12-23 11:11:08,485 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Creating java file: C:\Users\user\Documents\JPS WS\SBQL4J_Examples\dist\pl\wcislo\sbql4j\examples\xml\XMLExamples.java
2014-12-23 11:11:08,564 INFO  [pl.wcislo.sbql4j.java.preprocessor.PreprocessorRun] Sucessfully writed 19 files
