all 1 true
all (bag(1, bag(2,3) group as wew) as num) (num == 2)
all emp married
true and false
booleanValue and true
false and true and 1
any 1 true
4
any emp married
1 as liczba
bag(1,2) as num
(1,2) as num
bag(1)
bag(1,2,3)
bag(1+2,3)
bag(bag(1,2,3))
integerNumber
realNumber
booleanValue
stringValue
pomidor
sampleComplexObj
(1,2)
(bag(1,2),3)
bag(1,2),bag(3,4)
10/5
5/3.50
3.50/5
3.50/5.50
(1 as x).(x)
(1,2).("Ala")
emp.book.author
bag(1,2).("Ala")
1 == 2
integerNumber == 10
bag(1,2) == 2
booleanValue == true
stringValue == "Ala"
1 == true
5 == "5"
5.50 == 5
1 > 1
3 > 2.99
24.35 > 24.34
1 >= 1
3 >= 2.99
24.35 >= 24.34
bag(1,2,3) group as num
1 group as liczba
bag(1,2,3) intersect bag(2,3)
1 intersect 1
(1,2) intersect (2,3)
(1,2) intersect (1,2)
bag("ala",2,3) intersect bag(2,3.40)
1 join 2
(1 as n) join n
(emp) join (married)
(emp as e) join (e.married)
1 <= 1
24.34 <= 24.35
2.99 <= 3
1 < 1
24.34 < 24.35
2.99 < 3
max(1)
max (bag(1,3.35,3))
min(1)
min (bag(1.01,2.35,3))
10-5
5-3.50
3.50-5
3.50-5.50
10%5
5%3.50
3.50%5
3.50%5.50
10*5
5*3.50
3.50*5
3.50*5.50
true or false
booleanValue or false
true or false or 1
10+5
5+3.50
3.50+5
3.50+5.50
3+"Ala"
3.5+"Ala"
"Ala"+3.7
true+"Ala"
struct(1)
struct(1,2,3)
struct(1+2,3)
struct(struct(1,2,3))
1 union 2
bag(1,2) union bag(3,4)
(1,2) union (3,4)
unique(bag(1,2,1))
unique(bag(1.01,2,1.01,"ala"))
bag(1,2) where true
bag(1,2,3) as n where n == 1
emp where married
sum(1)
sum(bag(1.01,2.35,3))
count(1)
count(bag(1.01,2.35,3))
count(1.01,2.35,3)
not true
not false
true xor false
true xor true
false xor true
booleanValue xor true
true nand false
false nand true
false nand false
true nand true
booleanValue nand true
bag(2,3) in bag(1,2,3)
1 in 1
(1,2) in (2,3)
(1,2) in (1,2)
bag(1,2,3) minus bag(2,3)
1 minus 1
(1,2) minus (2,3)
(1,2) minus (1,2)
bag("ala",2,3) minus bag(2,3.40)
